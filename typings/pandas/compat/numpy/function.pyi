from typing import Any

class CompatValidator:
    def __init__(
        self, defaults, fname=..., method: str | None = ..., max_fname_arg_count=...
    ) -> None: ...
    def __call__(
        self, args, kwargs, fname=..., max_fname_arg_count=..., method: str | None = ...
    ) -> None: ...

ARGMINMAX_DEFAULTS = ...
validate_argmin = ...
validate_argmax = ...

def process_skipna(skipna, args): ...
def validate_argmin_with_skipna(skipna, args, kwargs): ...
def validate_argmax_with_skipna(skipna, args, kwargs): ...

ARGSORT_DEFAULTS: dict[str, int | str | None] = ...
validate_argsort = ...
ARGSORT_DEFAULTS_KIND: dict[str, int | None] = ...
validate_argsort_kind = ...

def validate_argsort_with_ascending(ascending, args, kwargs): ...

CLIP_DEFAULTS: dict[str, Any] = ...
validate_clip = ...

def validate_clip_with_axis(axis, args, kwargs): ...

CUM_FUNC_DEFAULTS: dict[str, Any] = ...
validate_cum_func = ...
validate_cumsum = ...

def validate_cum_func_with_skipna(skipna, args, kwargs, name): ...

ALLANY_DEFAULTS: dict[str, bool | None] = ...
validate_all = ...
validate_any = ...
LOGICAL_FUNC_DEFAULTS = ...
validate_logical_func = ...
MINMAX_DEFAULTS = ...
validate_min = ...
validate_max = ...
RESHAPE_DEFAULTS: dict[str, str] = ...
validate_reshape = ...
REPEAT_DEFAULTS: dict[str, Any] = ...
validate_repeat = ...
ROUND_DEFAULTS: dict[str, Any] = ...
validate_round = ...
SORT_DEFAULTS: dict[str, int | str | None] = ...
validate_sort = ...
STAT_FUNC_DEFAULTS: dict[str, Any | None] = ...
SUM_DEFAULTS = ...
PROD_DEFAULTS = ...
MEDIAN_DEFAULTS = ...
validate_stat_func = ...
validate_sum = ...
validate_prod = ...
validate_mean = ...
validate_median = ...
STAT_DDOF_FUNC_DEFAULTS: dict[str, bool | None] = ...
validate_stat_ddof_func = ...
TAKE_DEFAULTS: dict[str, str | None] = ...
validate_take = ...

def validate_take_with_convert(convert, args, kwargs): ...

TRANSPOSE_DEFAULTS = ...
validate_transpose = ...

def validate_window_func(name, args, kwargs) -> None: ...
def validate_rolling_func(name, args, kwargs) -> None: ...
def validate_expanding_func(name, args, kwargs) -> None: ...
def validate_groupby_func(name, args, kwargs, allowed=...) -> None: ...

RESAMPLER_NUMPY_OPS = ...

def validate_resampler_func(method: str, args, kwargs) -> None: ...
def validate_minmax_axis(axis: int | None, ndim: int = ...) -> None: ...
