from typing import TYPE_CHECKING, Any, Sequence
import numpy as np
import numpy.ma as ma
from pandas import ExtensionArray, Index, Series
from pandas._typing import AnyArrayLike, ArrayLike, Dtype, DtypeObj

if TYPE_CHECKING: ...

def array(
    data: Sequence[object] | AnyArrayLike, dtype: Dtype | None = ..., copy: bool = ...
) -> ExtensionArray: ...
def extract_array(
    obj: object, extract_numpy: bool = ..., extract_range: bool = ...
) -> Any | ArrayLike: ...
def ensure_wrapped_if_datetimelike(arr): ...
def sanitize_masked_array(data: ma.MaskedArray) -> np.ndarray: ...
def sanitize_array(
    data,
    index: Index | None,
    dtype: DtypeObj | None = ...,
    copy: bool = ...,
    raise_cast_failure: bool = ...,
    *,
    allow_2d: bool = ...
) -> ArrayLike: ...
def range_to_ndarray(rng: range) -> np.ndarray: ...
def is_empty_data(data: Any) -> bool: ...
def create_series_with_explicit_dtype(
    data: Any = ...,
    index: ArrayLike | Index | None = ...,
    dtype: Dtype | None = ...,
    name: str | None = ...,
    copy: bool = ...,
    fastpath: bool = ...,
    dtype_if_empty: Dtype = ...,
) -> Series: ...
