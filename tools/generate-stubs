#!/bin/bash

BASEDIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]:-$0}")" &>/dev/null && pwd 2>/dev/null)"
GIT_ROOT="$(bazel info workspace)"

cd "$GIT_ROOT" || exit 1

# NOTE that we are using local bazel instead of system bazel.
BAZEL_BIN="$BASEDIR/bazel"

main() {
	local VERSION="${1:-v1}"
	# Use inline heredoc for even faster build
	# Keeping image as cache should be fine since we only want to generate the stubs.

	BIN_FOLDER="$($BAZEL_BIN info bazel-bin)"
	GRPC_PLUGIN="$BIN_FOLDER/external/com_github_grpc_grpc/src/compiler/grpc_python_plugin"

	if ! [ -f "$GRPC_PLUGIN" ]; then
		echo "Compiling gRPC protoc plugin..."
		"$BAZEL_BIN" build @com_github_grpc_grpc//src/compiler:grpc_python_plugin
	fi

	# get protobuf proto
	if ! [ -d "$BIN_FOLDER/external/com_google_protobuf/_virtual_imports" ]; then
		"$BAZEL_BIN" build @com_google_protobuf//:struct_proto
		"$BAZEL_BIN" build @com_google_protobuf//:wrappers_proto
	fi

	# Build mypy plugin for protobuf
	GEN_MYPY_PATH="$BIN_FOLDER/external/pypi_mypy_protobuf/rules_python_wheel_entry_point_protoc-gen-mypy"
	GEN_MYPY_GRPC_PATH="$BIN_FOLDER/external/pypi_mypy_protobuf/rules_python_wheel_entry_point_protoc-gen-mypy_grpc"
	if ! [ -f "$GEN_MYPY_PATH" ]; then
		bazel build //:protoc-gen-mypy
	fi
	if ! [ -f "$GEN_MYPY_GRPC_PATH" ]; then
		bazel build //:protoc-gen-mypy_grpc
	fi

	echo "Generating gRPC stubs..."
	"$BAZEL_BIN" run @com_google_protobuf//:protoc -- -I"$GIT_ROOT/src" \
		-I "$BIN_FOLDER/external/com_google_protobuf/_virtual_imports/struct_proto" \
		-I "$BIN_FOLDER/external/com_google_protobuf/_virtual_imports/wrappers_proto" \
		--plugin=protoc-gen-mypy="$GEN_MYPY_PATH" \
		--plugin=protoc-gen-grpc-mypy="$GEN_MYPY_GRPC_PATH" \
		--plugin=protoc-gen-grpc-python="$GRPC_PLUGIN" \
		--grpc-python_out="$GIT_ROOT/src" --python_out="$GIT_ROOT/src" --mypy_out="$GIT_ROOT/src" --grpc-mypy_out="$GIT_ROOT/src" \
		"bentoml/grpc/$VERSION/service.proto"
	"$BAZEL_BIN" run @com_google_protobuf//:protoc -- -I. \
		--plugin=protoc-gen-mypy="$GEN_MYPY_PATH" \
		--plugin=protoc-gen-grpc-mypy="$GEN_MYPY_GRPC_PATH" \
		--plugin=protoc-gen-grpc-python="$GRPC_PLUGIN" \
		--grpc-python_out=. --python_out=. --mypy_out=. --grpc-mypy_out=. \
		"tests/proto/service_test.proto"
}

if [ "${#}" -gt 1 ]; then
	echo "$0 takes one optional argument. Usage: $0 [v1]"
	exit 1
fi

main "$@"
