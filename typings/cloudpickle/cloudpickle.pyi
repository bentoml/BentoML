from io import BufferedReader, BytesIO
from typing import Any, Callable, Literal

DEFAULT_PROTOCOL: Literal[5] = ...
_PICKLE_BY_VALUE_MODULES = ...
_DYNAMIC_CLASS_TRACKER_BY_CLASS = ...
_DYNAMIC_CLASS_TRACKER_BY_ID = ...
_DYNAMIC_CLASS_TRACKER_LOCK = ...
PYPY = ...
builtin_code_type = ...

def register_pickle_by_value(module): ...
def unregister_pickle_by_value(module): ...
def list_registry_pickle_by_value(): ...
def cell_set(cell, value): ...

STORE_GLOBAL = ...
DELETE_GLOBAL = ...
LOAD_GLOBAL = ...
GLOBAL_OPS = ...
HAVE_ARGUMENT = ...
EXTENDED_ARG = ...
_BUILTIN_TYPE_NAMES = ...
_is_parametrized_type_hint = ...
_create_parametrized_type_hint = ...

def parametrized_type_hint_getinitargs(obj): ...
def is_tornado_coroutine(func):
    """
    Return whether *func* is a Tornado coroutine function.
    Running coroutines are not supported.
    """
    ...

load: Callable[[BufferedReader], Any] = ...
loads: Callable[[BytesIO], Any] = ...

def subimport(name): ...
def dynamic_subimport(name, vars): ...
def instance(cls): ...
@instance
class _empty_cell_value:
    @classmethod
    def __reduce__(cls): ...
