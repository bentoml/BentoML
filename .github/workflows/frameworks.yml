name: Frameworks

on:
  push:
    branches:
      - master
      - bentoml-1.0
  pull_request:
    branches:
      - master
      - bentoml-1.0
  schedule:
    - cron: '0 0 * * 1/2'

jobs:
  changed_files:
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.filter.outputs.runner }}
      catboost: ${{ steps.filter.outputs.catboost }}
      detectron2: ${{ steps.filter.outputs.detectron2 }}
      easyocr: ${{ steps.filter.outputs.easyocr }}
      evalml: ${{ steps.filter.outputs.evalml }}
      fastai: ${{ steps.filter.outputs.fastai }}
      fasttext: ${{ steps.filter.outputs.fasttext }}
      gluon: ${{ steps.filter.outputs.gluon }}
      h2o: ${{ steps.filter.outputs.h2o }}
      keras_tf1: ${{ steps.filter.outputs.keras_tf1 }}
      keras_tf2: ${{ steps.filter.outputs.keras_tf2 }}
      lightgbm: ${{ steps.filter.outputs.lightgbm }}
      mlflow: ${{ steps.filter.outputs.mlflow }}
      onnx: ${{ steps.filter.outputs.onnx }}
      onnxmlir: ${{ steps.filter.outputs.onnxmlir }}
      paddle: ${{ steps.filter.outputs.paddle }}
      pycaret: ${{ steps.filter.outputs.pycaret }}
      pyspark_mllib: ${{ steps.filter.outputs.pyspark_mllib }}
      pytorch: ${{ steps.filter.outputs.pytorch }}
      pytorch_lightning: ${{ steps.filter.outputs.pytorch_lightning }}
      sklearn: ${{ steps.filter.outputs.sklearn }}
      spacy: ${{ steps.filter.outputs.spacy }}
      statsmodels: ${{ steps.filter.outputs.statsmodels}}
      tf1: ${{ steps.filter.outputs.tf1 }}
      tf2: ${{ steps.filter.outputs.tf2 }}
      transformers: ${{ steps.filter.outputs.transformers }}
      xgboost: ${{ steps.filter.outputs.xgboost }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: .github/workflows/framework-filter.yml

  catboost_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.catboost == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_catboost_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  detectron2_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.detectron2 == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        if: steps.modified.outputs.any_changed == 'true'
        run: |
          ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_detectron2_tests.sh
      - name: Upload test coverage to Codecov

  easyocr_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.easyocr == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_easyocr_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  evalml_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.evalml == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_evalml_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  fastai_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.fastai == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_fastai_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  fasttext_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.fasttext == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_fasttext_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  gluon_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.gluon == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_gluon_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  h2o_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.h2o == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_h2o_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  keras_with_tf1_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.keras_tf1 == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.10
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/tensorflow/run_keras_tf1_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  keras_with_tf2_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.keras_tf2 == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.10
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/tensorflow/run_keras_tf2_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  lightgbm_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.lightgbm == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_lightgbm_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  mlflow_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.mlflow == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_mlflow_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  onnx_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.onnx == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/onnx/run_onnx_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  onnxmlir_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.onnxmlir == 'true' }}
    runs-on: ubuntu-latest
    container:
      image: onnxmlirczar/onnx-mlir-dev:latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/onnx/run_onnxmlir_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  paddle_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.paddle == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_paddle_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  pycaret_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.pycaret == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_pycaret_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  pyspark_mllib_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.pyspark_mllib == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_pyspark_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  pytorch_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.pytorch == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_pytorch_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  pytorch_lightning_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.pytorch_lightning == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Run tests
        run: ./ci/integration/frameworks/run_pytorch_lightning_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  sklearn_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.sklearn == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_sklearn_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  spacy_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.spacy == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_spacy_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  statsmodels_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.statsmodels == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_statsmodels_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  tensorflow_v1_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.tf1 == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/tensorflow/run_tf1_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  tensorflow_v2_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.tf2 == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/tensorflow/run_tf2_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  transformers_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.transformers == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_transformers_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  xgboost_integration_tests:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.runner == 'true' && needs.changed_files.outputs.xgboost == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/integration/frameworks/run_xgboost_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

concurrency:
  group: frameworks-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
