name: code-quality
on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "0 0 * * 1/2"
env:
  LINES: 200
  COLUMNS: 200
  BENTOML_DO_NOT_TRACK: True
concurrency:
  group: cqa-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#defaultsrun
defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}
jobs:
  style:
    if: "!github.event.repository.fork" # Don't run on fork repository
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - name: Setup CI
        uses: ./.github/actions/setup-repo
        with:
          python-version: "3.8"
          architecture: "x64"
      - name: Setup bufbuild/buf
        uses: bufbuild/buf-setup-action@v1.14.0
        with:
          github_token: ${{ github.token }}
      - name: Format
        run: |
          black --check src examples tests
          black --check --pyi typings **/*.pyi
          isort --check .
      - name: Lint
        run: ruff check src tests examples
      - name: Proto
        run: |
          buf lint --config "src/bentoml/grpc/buf.yaml" --error-format msvs src
  type:
    if: ${{ github.event_name == 'pull_request' }} && "!github.event.repository.fork"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "17"
      - name: Install pyright
        run: npm install -g npm@^7 pyright
      - name: Type check
        run: |
          git diff --name-only --diff-filter=AM "origin/$GITHUB_BASE_REF" -z -- '*.py{,i}' | xargs -0 --no-run-if-empty pyright
  spelling:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup CI
        uses: ./.github/actions/setup-repo
        with:
          python-version: "3.8"
          architecture: "x64"
      - name: Install libenchant
        run: |
          sudo apt-get update && sudo apt-get install -y libenchant-2-dev
      - name: Run spellcheck script
        run: |
          sphinx-build -b spelling ./docs/source ./docs/build || (echo "Failed to run spellcheck. Refer to logs for more details"; exit 1)
