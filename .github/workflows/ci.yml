name: BentoML-CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 2 * * *'

jobs:

  lint_and_format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run linting script
        run: ./ci/linter.sh


  documentation_spelling_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Run spellcheck script
        run: ./ci/docs_spell_check.sh

  unit_tests:
    name: ${{ matrix.os }} Python ${{ matrix.python-version }} Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [ '3.6.10', '3.7', '3.8' ]
        exclude:
          - os: macos-latest
            python-version: 3.8
          - os: macos-latest
            python-version: 3.6.10
          - os: windows-latest
            python-version: 3.8
          - os: windows-latest
            python-version: 3.6.10
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
        shell: bash
      - name: Run Unit Tests
        run: ./ci/unit_tests.sh
        shell: bash
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12
        with:
          name: codecov-${{ matrix.os}}-python${{ matrix.python-version }}
          fail_ci_if_error: true

  onnx_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/onnx_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  pytorch_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/pytorch_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  fastai_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Install fastai
        run: python -m pip install fastai
      - name: Run tests
        run: ./ci/test_project.sh.cmd tests/integration/projects/fastai2
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12


  coreml_integration_tests:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/coreml_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  paddle_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Install paddle
        run: python -m pip install paddlepaddle
      - name: Run tests
        run: ./ci/test_project.sh.cmd tests/integration/projects/paddle
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  api_server_integration_tests:
    name: API Server Integration Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/test_project.sh.cmd tests/integration/projects/general
      - name: Run tests
        run: ./ci/test_project.sh.cmd tests/integration/projects/general_non_batch
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  back_compatibility_integration_tests:
    name: Backward Compatibility Integration Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/back_compatibility_itest.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  tensorflow_v2_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/tensorflow_v2.2_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  keras_with_tf1_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests with tf1
        run: ./ci/keras_with_tf1_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  keras_with_tf2_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests with tf2
        run: ./ci/keras_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  h2o_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6.10
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/h2o_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  xgboost_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6.10
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/xgboost_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12


  detectron2_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6.10
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/detectron2_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  transformers_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6.10
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/transformers_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  gluon_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run tests
        run: ./ci/gluon_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  bento_management_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Run tests
        run: ./ci/model_management_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  yatai_server_integration_tests:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Run tests
        run: ./ci/yatai_server_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  s3_bucket_integration_test:
    runs-on: ubuntu-latest
    services:
      minio:
        image: yubozhao/minio-github-action-service
        env:
          MINIO_ACCESS_KEY: bentoml
          MINIO_SECRET_KEY: bentoml
        ports:
          - 9000:9000
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Run s3 test
        run: ./ci/s3_bucket_integration_tests.sh
        env:
          AWS_ACCESS_KEY: bentoml
          AWS_SECRET_ACCESS_KEY: bentoml
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

  pytorch_lightning_integration_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_test_deps.sh.cmd
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Run tests
        run: ./ci/pytorch_lightning_integration_tests.sh
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12
