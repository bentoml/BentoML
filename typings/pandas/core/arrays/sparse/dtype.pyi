from typing import TYPE_CHECKING, Any
from pandas._typing import Dtype, type_t
from pandas.core.arrays.sparse.array import SparseArray
from pandas.core.dtypes.base import ExtensionDtype, register_extension_dtype

if TYPE_CHECKING: ...

@register_extension_dtype
class SparseDtype(ExtensionDtype):
    _metadata = ...
    def __init__(self, dtype: Dtype = ..., fill_value: Any = ...) -> None: ...
    def __hash__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    @property
    def fill_value(self): ...
    @property
    def kind(self): ...
    @property
    def type(self): ...
    @property
    def subtype(self): ...
    @property
    def name(self): ...
    def __repr__(self) -> str: ...
    @classmethod
    def construct_array_type(cls) -> type_t[SparseArray]: ...
    @classmethod
    def construct_from_string(cls, string: str) -> SparseDtype: ...
    @classmethod
    def is_dtype(cls, dtype: object) -> bool: ...
