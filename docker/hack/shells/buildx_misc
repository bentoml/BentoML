#!/usr/bin/env bash

set -e
GIT_ROOT=$(git rev-parse --show-toplevel)
cd $GIT_ROOT/docker || exit 1

cleanup() {
	prefix="$@"
	LOG_PATH="$GIT_ROOT/docker/generated/builder.log"
	if $(docker buildx ls | grep "$prefix" >|/tmp/builder.log); then

		sed -n 'p;n' /tmp/builder.log | cut -d ' ' -f 1 >"$LOG_PATH"

		cat "$LOG_PATH" | while read -r line; do
			docker buildx rm "$line"
		done
		rm -rf "$LOG_PATH"
		echo "Finished removing emphemeral builder."
	else
		echo "No builder found, exiting..."
		exit 0
	fi
}

create() {
	prefix="$@"
	if ! $(docker buildx ls | grep "$prefix" &>/dev/null); then
		docker buildx create --use --driver docker-container --name "$prefix" --driver-opt image=moby/buildkit:master
	else
		docker buildx use "$prefix"
	fi
}

preflight() {
	if ! $(docker buildx &>/dev/null); then
		echo
		echo '*** `docker buildx` missing. Install binary for this machine architecture'
		echo '*** from `https://github.com/docker/buildx/releases/latest`'
		echo '*** to `~/.docker/cli-plugins/docker-buildx` and `chmod +x` it.'
		echo
		exit 1
	fi
	exit 0

}

qemu() {
	if [[ "$(uname)" == "Darwin" ]]; then
		docker run --rm --privileged tonistiigi/binfmt --install all
	else
		docker run --rm --privileged aptman/qus -s -l -- -p arm i386 mips64 mips64el ppc64le s390x aarch64 x86_64
	fi
	exit 0
}

usage() {
	cat <<-EOF
		Usage: buildx_misc [--help][--preflight][--install-qemu][--cleanup <NAME>][--create <NAME>]
		  Some helpers functions for interacting with buildx
		  -h|--help|-help:
		      display this usage.
		  -r|--cleanup|-cleanup <BUILDER>:
		      remove a builder with given name.
		  -c|--create|-create <BUILDER>:
		      create a new builder with given name.
		  -i|--install-qemu|-install-qemu:
		      install qemu to support building on multiple architecture.
		  -p|--preflight|-preflight:
		      preflight if buildx is available.

		  To create a builder, use:
		      buildx_misc -c manager_builder
		  To remove a builder for postflight e.g.:
		      buildx_misc -r manager_builder
	EOF
}

while [[ $# -gt 0 ]]; do
	case $1 in
	-h | -help | --help)
		usage
		exit
		;;
	-p | -preflight | --preflight)
		preflight
		;;
	-i | -install-qemu | --install-qemu)
		qemu
		;;
	-c | -create | --create)
		NAME="$2"
		create "$NAME"
		shift
		shift
		;;
	-r | -remove | --remove)
		NAME="$2"
		cleanup "$NAME"
		shift
		shift
		;;
	-* | --*)
		echo "Unknown option $1"
		exit 1
		;;
	*)
		shift
		;;
	esac
done
