from contextlib import contextmanager
from typing import Callable

def safe_import(mod_name: str, min_version: str | None = ...): ...
def skip_if_installed(package: str): ...
def skip_if_no(package: str, min_version: str | None = ...): ...

skip_if_no_mpl = ...
skip_if_mpl = ...
skip_if_32bit = ...
skip_if_windows = ...
skip_if_windows_python_3 = ...
skip_if_has_locale = ...
skip_if_not_us_locale = ...
skip_if_no_scipy = ...
skip_if_no_ne = ...

def skip_if_np_lt(ver_str: str, *args, reason: str | None = ...): ...
def parametrize_fixture_doc(*args): ...
def check_file_leaks(func) -> Callable: ...
@contextmanager
def file_leak_context(): ...
def async_mark(): ...

skip_array_manager_not_yet_implemented = ...
skip_array_manager_invalid_test = ...
