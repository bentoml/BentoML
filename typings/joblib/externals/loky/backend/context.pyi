import sys
from multiprocessing.context import BaseContext
from .process import LokyInitMainProcess, LokyProcess

START_METHODS = ...
_DEFAULT_START_METHOD = ...
physical_cores_cache = ...
if sys.version_info[:2] >= (3, 4):
    def get_context(method=...): ...

else:
    BaseContext = ...
    def get_spawning_popen(): ...
    def set_spawning_popen(popen): ...
    def assert_spawning(obj): ...
    def get_context(method=...): ...

def set_start_method(method, force=...): ...
def get_start_method(): ...
def cpu_count(only_physical_cores=...): ...

class LokyContext(BaseContext):
    _name = ...
    Process = LokyProcess
    cpu_count = ...
    def Queue(self, maxsize=..., reducers=...): ...
    def SimpleQueue(self, reducers=...): ...
    if sys.version_info[:2] < (3, 4):
        def get_context(self): ...
        def get_start_method(self): ...
        def Pipe(self, duplex=...): ...
    if sys.platform != "win32":
        def Semaphore(self, value=...): ...
        def BoundedSemaphore(self, value): ...
        def Lock(self): ...
        def RLock(self): ...
        def Condition(self, lock=...): ...
        def Event(self): ...

class LokyInitMainContext(LokyContext):
    _name = ...
    Process = LokyInitMainProcess

if sys.version_info > (3, 4):
    ctx_loky = ...
