{# BENTOML INTERNAL #}
{# users can use these values #}
{% import '_macros.j2' as common %}
{% set bento__entrypoint = bento__entrypoint | default(expands_bento_path("env", "docker", "entrypoint.sh", bento_path=bento__path)) %}
# syntax = docker/dockerfile:1.4-labs
#
# ===========================================
#
# THIS IS A GENERATED DOCKERFILE. DO NOT EDIT
#
# ===========================================

# Block SETUP_BENTO_BASE_IMAGE
{% block SETUP_BENTO_BASE_IMAGE %}
FROM {{ __base_image__ }}

ENV LANG=C.UTF-8

ENV LC_ALL=C.UTF-8

ENV PYTHONIOENCODING=UTF-8

ENV PYTHONUNBUFFERED=1

{% endblock %}

# Block SETUP_BENTO_USER
{% block SETUP_BENTO_USER %}
ARG BENTO_USER={{ bento__user }}
ARG BENTO_USER_UID={{ bento__uid_gid }}
ARG BENTO_USER_GID={{ bento__uid_gid }}
RUN groupadd -g $BENTO_USER_GID -o $BENTO_USER && useradd -m -u $BENTO_USER_UID -g $BENTO_USER_GID -o -r $BENTO_USER
{% endblock %}
{% block SETUP_BENTO_ENVARS %}
{% if __options__env is not none %}
{% for key, value in __options__env.items() -%}

ENV {{ key }}={{ value }}
{% endfor -%}
{% endif -%}

ARG BENTO_PATH={{ bento__path }}
ENV BENTO_PATH=$BENTO_PATH
ENV BENTOML_HOME={{ bento__home }}

RUN mkdir $BENTO_PATH && chown {{ bento__user }}:{{ bento__user }} $BENTO_PATH -R
WORKDIR $BENTO_PATH

# init related components
COPY --chown={{ bento__user }}:{{ bento__user }} . ./

{% endblock %}

# Block SETUP_BENTO_COMPONENTS
{% block SETUP_BENTO_COMPONENTS %}

{# bento__home already include leading / #}
# An assumption is made that all containers will have Python included.
COPY <<-"EOT" {{ bento__home }}runscript
#!/usr/bin/env python3

from __future__ import annotations
import subprocess


def main(argv: list[str]) -> int:
    args = argv[1:]
    script = args[0]

    with open(script, "r") as f:
        code = f.readlines()
    lang = code[0].replace("#!", "").strip().split()[-1]
    return subprocess.check_call([lang, script, *args[1:]])


if __name__ == "__main__":
    import sys

    raise SystemExit(main(sys.argv))
EOT
RUN chmod +x {{ bento__home }}runscript

{% set __runexec__ = [bento__home, "runscript"] | join("") %}
{% set __install_python_scripts__ = expands_bento_path("env", "python", "install.sh", bento_path=bento__path) %}
{% set __pip_cache__ = common.mount_cache("/root/.cache/pip") %}
{{ common.run_script(__install_python_scripts__, "install.sh to install python packages", run_args=__pip_cache__, runexec=__runexec__) }}

{% set __setup_script__ = expands_bento_path("env", "docker", "setup_script", bento_path=bento__path) %}
{{ common.run_script(__setup_script__, "user setup scripts", runexec=__runexec__) }}

{% endblock %}

# Block SETUP_BENTO_ENTRYPOINT
{% block SETUP_BENTO_ENTRYPOINT %}
# Default port for BentoServer
EXPOSE 3000

RUN chmod +x {{ bento__entrypoint }}

USER bentoml

ENTRYPOINT [ "{{ bento__entrypoint }}" ]

CMD [ "bentoml", "serve", "{{ bento__path }}", "--production" ]
{% endblock %}
