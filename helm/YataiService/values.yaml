# Default values for YataiService.

# Database URL following RFC-1738, and usually can
# include username, password, hostname, database name as
# well as optional keyword arguments for additional
# configuration
# (leave empty for SQLite)
db_url: {}

# Base URL for storing saved BentoService bundle files,
# this can be a filesystem path(POSIX/Windows), or an S3
# URL, usually starts with "s3://"
repo_base_url: {}

# Yatai Service
yatai:
  replicaCount: 1 # only supports 1 at the moment
  image:
    repo: bentoml/yatai-service
    version: 0.8.5
    pullPolicy: IfNotPresent
service:
  type: LoadBalancer
  ports:
    grpc: 50051
    web: 3000
  livenessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 3
    periodSeconds: 5
  readinessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 3
    periodSeconds: 5

# Local Postgres Service
postgres:
  enabled: false
  port: "5432"
  image:
    repo: postgres
    version: latest
    pullPolicy: IfNotPresent
  data:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password123
  storageCapacity: 5Gi
  pvReclaimPolicy: Retain

# Ingress Resource
ingress:
  enabled: false
  hostname: {}
  tls:
    enabled: false
    secretName: {}

### Advanced Settings ###
# Only change these if you know what you're doing

# Secrets if using self-hosted Docker repository
imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  name: "yatai-service-account"

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  yatai: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  postgres: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
