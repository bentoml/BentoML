name: fastai

concurrency:
  group: fastai_${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  BENTOML_DO_NOT_TRACK: True
  BENTOML_DEBUG: True
  # better debugging
  LINES: 200
  COLUMNS: 200

on:
  schedule:
    - cron: "0 0 * * 1/2"
  push:
    branches:
      - main
      - '*fastai*'
  pull_request:
    branches:
      - main
      - '*fastai*'
    paths:
      - 'requirements/**/*'
      - 'codecov.yml'
      - 'setup.cfg'
      - 'pyproject.toml'
      - '.github/workflow/generated_fastai.yml'
      - bentoml/_internal/runner/**
      - bentoml/_internal/models/**
      - 'bentoml/fastai.py'
      - 'bentoml/_internal/frameworks/fastai.py'
      - 'tests/intergration/frameworks/test_frameworks.py'
      - 'tests/intergration/frameworks/test_fastai_impl.py'

defaults:
  run:
    shell: bash

jobs:
  integration_tests_matrix:
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: true
      max-parallel: 4  # since we are supporting 3.7-3.10
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
        include:
          os: ubuntu-latest
          python-version: [ '3.11.0b3' ]  # EXPERIMENTAL
          experimental: [true]

    name: python${{ matrix.python-version }}_intergration_tests_${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all tags and branches

      - name: Setup python${{ matrix.python-version }} and cache pip
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          # https://github.com/actions/setup-python#caching-packages-dependencies
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install .
          pip install -r requirements/tests-requirements.txt
          pip install -U "setuptools<60" fastai

      - name: Run general framework integration tests for python ${{ matrix.python-version }}
        run: |
          OPTS=(--framework fastai --cov=bentoml --cov-config=./setup.cfg --cov-report=xml:"fastai.general.xml" --cov-report term-missing:skip-covered)
          python -m pytest ./tests/integration/frameworks/test_frameworks.py "${OPTS[@]}" || ERR=1
          if ! test $ERR = 0; then
            echo "general framework intergration tests for fastai failed!"
            exit 1
          fi

      - name: Run specific integration tests for python ${{ matrix.python-version }}
        run: |
          OPTS=(--cov=bentoml --cov-config=./setup.cfg --cov-report=xml:"fastai.specific.xml" --cov-report term-missing:skip-covered)
          python -m pytest ./tests/integration/frameworks/test_fastai_impl.py "${OPTS[@]}" || ERR=1
          if ! test $ERR = 0; then
            echo "specifc intergration tests for fastai failed!"
            exit 1
          fi

      - name: Upload test coverage to Codecov
      - uses: codecov/codecov-action@v2
        with:
          directory: ./
          files: ./fastai.general.xml,./fastai.specific.xml
          flags: fastai
          fail_ci_if_error: true
          verbose: true
