"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import bentoml.grpc.v1.struct_pb2
import builtins
import concurrent.futures
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.service
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ServerLiveRequest(google.protobuf.message.Message):
    """request for ServerLive that takes no arguments."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___ServerLiveRequest = ServerLiveRequest

class ServerLiveResponse(google.protobuf.message.Message):
    """response for ServerLive returns a boolean determine server's liveliness."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LIVE_FIELD_NUMBER: builtins.int
    live: builtins.bool
    def __init__(self,
        *,
        live: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["live",b"live"]) -> None: ...
global___ServerLiveResponse = ServerLiveResponse

class ServerReadyRequest(google.protobuf.message.Message):
    """request for ServerReady that takes no arguments."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___ServerReadyRequest = ServerReadyRequest

class ServerReadyResponse(google.protobuf.message.Message):
    """response for ServerReady returns a boolean determine server's readiness."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    READY_FIELD_NUMBER: builtins.int
    ready: builtins.bool
    def __init__(self,
        *,
        ready: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ready",b"ready"]) -> None: ...
global___ServerReadyResponse = ServerReadyResponse

class CallRequest(google.protobuf.message.Message):
    """Request for Call."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    API_NAME_FIELD_NUMBER: builtins.int
    CONTENTS_FIELD_NUMBER: builtins.int
    api_name: typing.Text
    """a given API route the rpc request is sent to."""

    @property
    def contents(self) -> bentoml.grpc.v1.struct_pb2.StructuredValue:
        """representation of the input value."""
        pass
    def __init__(self,
        *,
        api_name: typing.Text = ...,
        contents: typing.Optional[bentoml.grpc.v1.struct_pb2.StructuredValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["contents",b"contents"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_name",b"api_name","contents",b"contents"]) -> None: ...
global___CallRequest = CallRequest

class CallResponse(google.protobuf.message.Message):
    """Response from Call."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONTENTS_FIELD_NUMBER: builtins.int
    @property
    def contents(self) -> bentoml.grpc.v1.struct_pb2.StructuredValue:
        """representation of the output value."""
        pass
    def __init__(self,
        *,
        contents: typing.Optional[bentoml.grpc.v1.struct_pb2.StructuredValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["contents",b"contents"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["contents",b"contents"]) -> None: ...
global___CallResponse = CallResponse

class CallStreamRequest(google.protobuf.message.Message):
    """Request message for CallStream."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STREAM_INPUTS_FIELD_NUMBER: builtins.int
    @property
    def stream_inputs(self) -> global___CallRequest: ...
    def __init__(self,
        *,
        stream_inputs: typing.Optional[global___CallRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["stream_inputs",b"stream_inputs"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["stream_inputs",b"stream_inputs"]) -> None: ...
global___CallStreamRequest = CallStreamRequest

class CallStreamResponse(google.protobuf.message.Message):
    """Response message for CallStream."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    STREAM_OUTPUTS_FIELD_NUMBER: builtins.int
    error_message: typing.Text
    """message describing the error. Empty message signals the call was successful without error."""

    @property
    def stream_outputs(self) -> global___CallResponse:
        """representation of the output value."""
        pass
    def __init__(self,
        *,
        error_message: typing.Text = ...,
        stream_outputs: typing.Optional[global___CallResponse] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["stream_outputs",b"stream_outputs"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error_message",b"error_message","stream_outputs",b"stream_outputs"]) -> None: ...
global___CallStreamResponse = CallStreamResponse

class BentoService(google.protobuf.service.Service, metaclass=abc.ABCMeta):
    """a gRPC BentoServer."""
    DESCRIPTOR: google.protobuf.descriptor.ServiceDescriptor
    @abc.abstractmethod
    def ServerLive(
        inst: BentoService,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___ServerLiveRequest,
        callback: typing.Optional[typing.Callable[[global___ServerLiveResponse], None]],
    ) -> concurrent.futures.Future[global___ServerLiveResponse]:
        """Check server liveliness."""
        pass
    @abc.abstractmethod
    def ServerReady(
        inst: BentoService,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___ServerReadyRequest,
        callback: typing.Optional[typing.Callable[[global___ServerReadyResponse], None]],
    ) -> concurrent.futures.Future[global___ServerReadyResponse]:
        """Check server readiness"""
        pass
    @abc.abstractmethod
    def Call(
        inst: BentoService,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___CallRequest,
        callback: typing.Optional[typing.Callable[[global___CallResponse], None]],
    ) -> concurrent.futures.Future[global___CallResponse]:
        """Call handles unary API."""
        pass
    @abc.abstractmethod
    def CallStream(
        inst: BentoService,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___CallStreamRequest,
        callback: typing.Optional[typing.Callable[[global___CallStreamResponse], None]],
    ) -> concurrent.futures.Future[global___CallStreamResponse]:
        """CallStream handles streaming API."""
        pass
class BentoService_Stub(BentoService):
    """a gRPC BentoServer."""
    def __init__(self, rpc_channel: google.protobuf.service.RpcChannel) -> None: ...
    DESCRIPTOR: google.protobuf.descriptor.ServiceDescriptor
    def ServerLive(
        inst: BentoService_Stub,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___ServerLiveRequest,
        callback: typing.Optional[typing.Callable[[global___ServerLiveResponse], None]] = None,
    ) -> concurrent.futures.Future[global___ServerLiveResponse]:
        """Check server liveliness."""
        pass
    def ServerReady(
        inst: BentoService_Stub,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___ServerReadyRequest,
        callback: typing.Optional[typing.Callable[[global___ServerReadyResponse], None]] = None,
    ) -> concurrent.futures.Future[global___ServerReadyResponse]:
        """Check server readiness"""
        pass
    def Call(
        inst: BentoService_Stub,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___CallRequest,
        callback: typing.Optional[typing.Callable[[global___CallResponse], None]] = None,
    ) -> concurrent.futures.Future[global___CallResponse]:
        """Call handles unary API."""
        pass
    def CallStream(
        inst: BentoService_Stub,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___CallStreamRequest,
        callback: typing.Optional[typing.Callable[[global___CallStreamResponse], None]] = None,
    ) -> concurrent.futures.Future[global___CallStreamResponse]:
        """CallStream handles streaming API."""
        pass