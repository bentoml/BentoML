{{ header }}
{% set cached = ['arm32v5', 'arm32v6'] %}

ARG XX_VERSION=master

FROM --platform=$BUILDPLATFORM tonistiigi/xx:${XX_VERSION} AS xx

{% if user_defined_image != true %}
FROM {{ base_image }} as cached

FROM {{ base_image }} as base

{% for key in distro_spec.supported_architecture if key not in cached -%}
{% if 'arm64' in key %}

FROM base as base-arm64
{% elif 'arm' in key %}

FROM base as base-arm
{% elif 'i386' in key %}

FROM base as base-386
{% else %}

FROM base as base-{{ key }}
{% endif %}
{% endfor %}

FROM base-${TARGETARCH}
{% else %}
FROM {{ base_image }} as cached

FROM {{ base_image }}
{% endif %}

{{ base_env }}

ENV PATH /usr/local/bin:$PATH

ENV ENV /root/.bashrc

# Install helpers
RUN --mount=type=cache,from=cached,target=/var/cache/apk \
	xx-apk add --update bash gcc libc-dev shadow musl-dev build-base \
	linux-headers g++

{% if docker_options.env is not none %}
{% for key, value in docker_options.env.items() %}

ENV {{ key }}={{ value }}
{% endfor %}
{% endif %}
{% if docker_options.system_packages is not none %}

# Install user-defined system package
RUN --mount=type=cache,from=cached,target=/var/cache/apk xx-apk add --update {{ docker_options.system_packages|join(" ") }}
{% endif %}

# Setup UID/GID
{{ setup_uid_gid }}

{{ setup_bento_env }}

{{ install_python_with_conda }}

# Install bentoml
ENV BENTOML_VERSION={{ bentoml_version }}
RUN --mount=type=cache,mode=0777,target=/root/.cache/pip \
	pip install bentoml==${BENTOML_VERSION} --no-cache-dir

{{ setup_python_package }}

{{ setup_entrypoint }}
