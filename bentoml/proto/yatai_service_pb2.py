# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: yatai_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import bentoml.proto.common_pb2 as common__pb2
import bentoml.proto.status_pb2 as status__pb2
import bentoml.proto.deployment_pb2 as deployment__pb2
import bentoml.proto.repository_pb2 as repository__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='yatai_service.proto',
  package='bentoml',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x13yatai_service.proto\x12\x07\x62\x65ntoml\x1a\x0c\x63ommon.proto\x1a\x0cstatus.proto\x1a\x10\x64\x65ployment.proto\x1a\x10repository.proto\"6\n\x13HealthCheckResponse\x12\x1f\n\x06status\x18\x01 \x01(\x0b\x32\x0f.bentoml.Status2\xad\x05\n\x05Yatai\x12;\n\x0bHealthCheck\x12\x0e.bentoml.Empty\x1a\x1c.bentoml.HealthCheckResponse\x12T\n\x0f\x41pplyDeployment\x12\x1f.bentoml.ApplyDeploymentRequest\x1a .bentoml.ApplyDeploymentResponse\x12W\n\x10\x44\x65leteDeployment\x12 .bentoml.DeleteDeploymentRequest\x1a!.bentoml.DeleteDeploymentResponse\x12N\n\rGetDeployment\x12\x1d.bentoml.GetDeploymentRequest\x1a\x1e.bentoml.GetDeploymentResponse\x12]\n\x12\x44\x65scribeDeployment\x12\".bentoml.DescribeDeploymentRequest\x1a#.bentoml.DescribeDeploymentResponse\x12T\n\x0f\x41\x64\x64\x42\x65ntoService\x12\x1f.bentoml.AddBentoServiceRequest\x1a .bentoml.AddBentoServiceResponse\x12]\n\x12RemoveBentoService\x12\".bentoml.RemoveBentoServiceRequest\x1a#.bentoml.RemoveBentoServiceResponse\x12T\n\x0fGetBentoService\x12\x1f.bentoml.GetBentoServiceRequest\x1a .bentoml.GetBentoServiceResponseb\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,status__pb2.DESCRIPTOR,deployment__pb2.DESCRIPTOR,repository__pb2.DESCRIPTOR,])




_HEALTHCHECKRESPONSE = _descriptor.Descriptor(
  name='HealthCheckResponse',
  full_name='bentoml.HealthCheckResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='bentoml.HealthCheckResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=96,
  serialized_end=150,
)

_HEALTHCHECKRESPONSE.fields_by_name['status'].message_type = status__pb2._STATUS
DESCRIPTOR.message_types_by_name['HealthCheckResponse'] = _HEALTHCHECKRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HealthCheckResponse = _reflection.GeneratedProtocolMessageType('HealthCheckResponse', (_message.Message,), {
  'DESCRIPTOR' : _HEALTHCHECKRESPONSE,
  '__module__' : 'yatai_service_pb2'
  # @@protoc_insertion_point(class_scope:bentoml.HealthCheckResponse)
  })
_sym_db.RegisterMessage(HealthCheckResponse)



_YATAI = _descriptor.ServiceDescriptor(
  name='Yatai',
  full_name='bentoml.Yatai',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=153,
  serialized_end=838,
  methods=[
  _descriptor.MethodDescriptor(
    name='HealthCheck',
    full_name='bentoml.Yatai.HealthCheck',
    index=0,
    containing_service=None,
    input_type=common__pb2._EMPTY,
    output_type=_HEALTHCHECKRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ApplyDeployment',
    full_name='bentoml.Yatai.ApplyDeployment',
    index=1,
    containing_service=None,
    input_type=deployment__pb2._APPLYDEPLOYMENTREQUEST,
    output_type=deployment__pb2._APPLYDEPLOYMENTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteDeployment',
    full_name='bentoml.Yatai.DeleteDeployment',
    index=2,
    containing_service=None,
    input_type=deployment__pb2._DELETEDEPLOYMENTREQUEST,
    output_type=deployment__pb2._DELETEDEPLOYMENTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetDeployment',
    full_name='bentoml.Yatai.GetDeployment',
    index=3,
    containing_service=None,
    input_type=deployment__pb2._GETDEPLOYMENTREQUEST,
    output_type=deployment__pb2._GETDEPLOYMENTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DescribeDeployment',
    full_name='bentoml.Yatai.DescribeDeployment',
    index=4,
    containing_service=None,
    input_type=deployment__pb2._DESCRIBEDEPLOYMENTREQUEST,
    output_type=deployment__pb2._DESCRIBEDEPLOYMENTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddBentoService',
    full_name='bentoml.Yatai.AddBentoService',
    index=5,
    containing_service=None,
    input_type=repository__pb2._ADDBENTOSERVICEREQUEST,
    output_type=repository__pb2._ADDBENTOSERVICERESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveBentoService',
    full_name='bentoml.Yatai.RemoveBentoService',
    index=6,
    containing_service=None,
    input_type=repository__pb2._REMOVEBENTOSERVICEREQUEST,
    output_type=repository__pb2._REMOVEBENTOSERVICERESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetBentoService',
    full_name='bentoml.Yatai.GetBentoService',
    index=7,
    containing_service=None,
    input_type=repository__pb2._GETBENTOSERVICEREQUEST,
    output_type=repository__pb2._GETBENTOSERVICERESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_YATAI)

DESCRIPTOR.services_by_name['Yatai'] = _YATAI

# @@protoc_insertion_point(module_scope)
