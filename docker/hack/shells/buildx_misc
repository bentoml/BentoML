#!/usr/bin/env bash

set -e
GIT_ROOT=$(git rev-parse --show-toplevel)
DOCKER_DIR="$GIT_ROOT/docker"
cd "$DOCKER_DIR" || exit 1

cleanup() {
	prefix="$1"
	LOG_PATH="$GIT_ROOT/docker/generated/builder.log"
	if docker buildx ls | grep "$prefix" >|/tmp/builder.log; then

		sed -n 'p;n' /tmp/builder.log | cut -d ' ' -f 1 >"$LOG_PATH"

		while read -r line; do
			docker buildx rm "$line"
		done <"$LOG_PATH"
		rm -rf "$LOG_PATH"
		echo "Finished removing emphemeral builder."
	else
		echo "No builder found, exiting..."
		exit 0
	fi
}

create_builder() {
	prefix="$1"
	if ! docker buildx ls | grep "$prefix" &>/dev/null; then
		docker buildx create --use --driver docker-container --name "$prefix" --driver-opt image=moby/buildkit:master
	else
		docker buildx use "$prefix"
	fi
}

preflight() {
	if ! docker buildx &>/dev/null; then
		echo
		echo "*** \`docker buildx\` missing. Install binary for this machine architecture"
		echo "*** from \`https://github.com/docker/buildx/releases/latest\`"
		echo "*** to \`~/.docker/cli-plugins/docker-buildx\` and \`chmod +x\` it."
		echo
		exit 1
	fi
	exit 0

}

ARGS=(--rm --privileged)

install_qemu() {
	if [[ -f "/.dockerenv" ]]; then
		docker run "${ARGS[@]}" multiarch/qemu-user-static:register
	else
		if [[ "$(uname)" == "Darwin" ]]; then
			docker run "${ARGS[@]}" tonistiigi/binfmt --install all
		else
			docker run "${ARGS[@]}" aptman/qus -s -l -- -p arm i386 mips64 mips64el ppc64le s390x aarch64 x86_64
		fi
	fi
	exit 0
}

usage() {
	cat <<-EOF
		Usage: buildx_misc [--help][--preflight][--qemu][--cleanup <NAME>][--create <NAME>]
			Some helpers functions for interacting with buildx
			-h|--help|-help:
				display this usage.
			-r|--cleanup|-cleanup <BUILDER>:
				remove a builder with given name.
			-c|--create|-create <BUILDER>:
				create a new builder with given name.
			-q|--qemu|-qemu:
				install qemu to support building on multiple architecture.
			-p|--preflight|-preflight:
				preflight if buildx is available.

			To create a builder, use:
				buildx_misc -c manager_builder
			To remove a builder for postflight e.g.:
				buildx_misc -r manager_builder
	EOF
}

main() {
	while [[ $# -gt 0 ]]; do
		case $1 in
		-h | -help | --help)
			usage
			exit
			;;
		-p | -preflight | --preflight)
			preflight
			;;
		-q | -qemu | --qemu)
			install_qemu
			;;
		-c | -create | --create)
			NAME="$2"
			create_builder "$NAME"
			shift
			shift
			;;
		-r | -remove | --remove)
			NAME="$2"
			cleanup "$NAME"
			shift
			shift
			;;
		-*)
			echo "Unknown option $1"
			exit 1
			;;
		*)
			shift
			;;
		esac
	done
}

main "$@"
