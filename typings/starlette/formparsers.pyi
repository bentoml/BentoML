"""
This type stub file was generated by pyright.
"""

import typing
from enum import Enum
from starlette.datastructures import FormData, Headers

class FormMessage(Enum):
    FIELD_START = ...
    FIELD_NAME = ...
    FIELD_DATA = ...
    FIELD_END = ...
    END = ...

class MultiPartMessage(Enum):
    PART_BEGIN = ...
    PART_DATA = ...
    PART_END = ...
    HEADER_FIELD = ...
    HEADER_VALUE = ...
    HEADER_END = ...
    HEADERS_FINISHED = ...
    END = ...

class FormParser:
    def __init__(
        self, headers: Headers, stream: typing.AsyncGenerator[bytes, None]
    ) -> None: ...
    def on_field_start(self) -> None: ...
    def on_field_name(self, data: bytes, start: int, end: int) -> None: ...
    def on_field_data(self, data: bytes, start: int, end: int) -> None: ...
    def on_field_end(self) -> None: ...
    def on_end(self) -> None: ...
    async def parse(self) -> FormData: ...

class MultiPartParser:
    def __init__(
        self, headers: Headers, stream: typing.AsyncGenerator[bytes, None]
    ) -> None: ...
    def on_part_begin(self) -> None: ...
    def on_part_data(self, data: bytes, start: int, end: int) -> None: ...
    def on_part_end(self) -> None: ...
    def on_header_field(self, data: bytes, start: int, end: int) -> None: ...
    def on_header_value(self, data: bytes, start: int, end: int) -> None: ...
    def on_header_end(self) -> None: ...
    def on_headers_finished(self) -> None: ...
    def on_end(self) -> None: ...
    async def parse(self) -> FormData: ...
