name: CI

on:
  push:
    branches:
      - master
      - bentoml-1.0
  pull_request:
    branches:
      - master
      - bentoml-1.0
  schedule:
    - cron: '0 0 * * 1/2'

jobs:

  diff:
    runs-on: ubuntu-latest
    outputs:
      bentoml: ${{ steps.filter.outputs.bentoml }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: 'main'
          filters: |
            bentoml:
              - "bentoml/**"
              - "tests/**"
              - "docker/**"
            docs:
              - "docs/**"

  codestyle_check:
    runs-on: ubuntu-latest
    needs:
      - diff

    if: ${{ (github.event_name == 'pull_request' && needs.diff.outputs.bentoml == 'true') || github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v2
      - name: Format check
        run: make ci-format
      - name: Lint check
        # TODO: after fix all pylint errors under bentoml uses `make ci-lint` instead
        run: make ci-flake8
      - name: Type check
        # TODO: after fix all types errors uses `make ci-types` instead
        run: make ci-pyright

  documentation_spelling_check:
    runs-on: ubuntu-latest
    needs:
      - diff

    if: ${{ (github.event_name == 'pull_request' && needs.diff.outputs.docs == 'true') || github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Run spellcheck script
        run: ./scripts/ci/style/docs_spell_check.sh

  unit_tests:
    name: python${{ matrix.python-version }}_unit_tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [ '3.7', '3.8', '3.9' ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install test dependencies
        run: ./scripts/ci/install_dependencies.sh.cmd
        shell: bash
      - name: Run Unit Tests
        run: ./scripts/ci/unit_tests.sh
        shell: bash
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12
        with:
          name: codecov-${{ matrix.os}}-python${{ matrix.python-version }}
          fail_ci_if_error: true

  bento_server_integration_tests:
    name: bento_server_integration_tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        # TODO(bojiang): Fixes windows path problem
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./scripts/ci/install_dependencies.sh.cmd
      - name: install optional dependencies
        run: python -m pip install pydantic
      - name: Run tests
        run: pytest tests/integration/projects/general --project-root tests/integration/projects/general -vvv --capture=tee-sys
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

concurrency:
  group: ci-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
