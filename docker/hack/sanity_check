#!/usr/bin/env bash

set -e

HACK_DIR="$(cd "$( dirname "$(readlink -f $0)")" && pwd)"
TEST_PATH=$(realpath "${HACK_DIR}/../tests")


POSITIONAL_ARGS=()

while [[ $# -gt 0 ]]; do
case $1 in
    -img|--image_name)
    IMAGE_NAME="$2"
    shift # past argument
    shift # past value
    ;;
    -bv|--bentoml_version)
    BENTOML_VERSION="$2"
    shift # past argument
    shift # past value
    ;;
    -pv|--python_version)
    PYTHON_VERSION="$2"
    shift # past argument
    shift # past value
    ;;
    -os|--distros)
    OS="$2"
    shift # past argument
    shift # past value
    ;;
    -sf|--suffix)
    IMAGE_TAG_SUFFIX="$2"
    shift # past argument
    shift # past value
    ;;
    -pl|--platforms)
    PLATFORMS="$2"
    shift # past argument
    shift # past value
    ;;
    -og|--organization)
    ORGANIZATION="$2"
    shift # past argument
    shift # past value
    ;;
    --default)
    BENTOML_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1) | sed 's/v\(\)/\1/; s/-//g')
    IMAGE_NAME='bento-server'
    PLATFORMS='amd64'
    shift # past argument
    ;;
    -*|--*)
    echo "Unknown option $1"
    exit 1
    ;;
    *)
    POSITIONAL_ARGS+=("$1") # save positional arg
    shift # past argument
    ;;
esac
done

set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

run_test(){
    for test in $(find "$TEST_PATH" -iname "[0-9]*-*.bats" | sort ); do
        echo "Running tests for ${test}..."
        /usr/local/bin/bats --tap "${test}"
    done
}

main(){
    export __TEST_PYTHON_VERSION="$PYTHON_VERSION"
    export __TEST_OS="$OS"
    export __TEST_IMAGE_TAG_SUFFIX="$IMAGE_TAG_SUFFIX"
    export __TEST_IMAGE_NAME="$IMAGE_NAME"
    export __TEST_BENTOML_VERSION="$BENTOML_VERSION"
    export __TEST_IMAGE_NAME="$IMAGE_NAME"
    export __TEST_ARCH="$PLATFORMS"
	export __ORGANIZATION="$ORGANIZATION"
    export __TEST_ARCH=$(uname -m)

    run_test
}

main "$@"
