[metadata]
name = bentoml
version = attr: bentoml.__version__
description = Bentoml: The Unified Model Serving Framework
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/bentoml/BentoML
author = BentoML Team
author_email = contact@bentoml.ai
license = Apache-2.0
license_files = LICENSE
classifiers =
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Software Development :: Libraries
keywords = MLOps, AI, BentoML, Model Serving, Model Deployment
project_urls =
    Documentation = https://docs.bentoml.org/en/latest/
    Bug Reports = https://github.com/bentoml/BentoML/issues
    BentoML Community Slack = https://bit.ly/2N5IpbB
    BentoML Official Blog = https://modelserving.com
    BentoML Twitter = https://twitter.com/bentomlai

[options]
packages = find_namespace:
install_requires =
    Jinja2>=3.0.1
    PyYAML>=5.0
    aiohttp
    attrs>=21.1.0
    cattrs>=22.1.0
    circus
    click>=7.0
    cloudpickle
    deepmerge
    fs
    grpcio>=1.43.0  # compatible with tensorflow and supports 3.10
    numpy
    opentelemetry-api==1.9.0
    opentelemetry-instrumentation==0.28b0
    opentelemetry-instrumentation-aiohttp-client==0.28b0
    opentelemetry-instrumentation-asgi==0.28b0
    opentelemetry-sdk==1.9.0
    opentelemetry-semantic-conventions==0.28b0
    opentelemetry-util-http==0.28b0
    packaging>=20.0
    pathspec
    pip-tools>=6.6.2
    prometheus-client>=0.10.0,<0.14.0
    psutil
    pynvml<12
    python-dateutil
    python-dotenv>=0.20.0
    python-multipart
    requests
    rich>=11.2.0
    schema
    simple-di>=0.1.4
    starlette
    typing-extensions>=4.0
    astunparse;python_version<"3.8"  # backports for ast.unparse
    backports.cached-property;python_version<"3.8"
    importlib-metadata;python_version<"3.8"
    uvicorn
    watchfiles>=0.15.0
python_requires = >=3.7
include_package_data = True
setup_requires =
    astunparse
    grpcio-tools>=1.43.0  # matching with grpcio dependency for generating stubs
    setuptools>=59.0
    setuptools-scm>=6.2.3
    wheel
zip_safe = False

[options.packages.find]
include = bentoml*

[options.entry_points]
console_scripts =
    bentoml = bentoml._internal.cli:cli

[options.extras_require]
tracing =
    opentelemetry-exporter-jaeger
    opentelemetry-exporter-zipkin

[options.package_data]
bentoml = py.typed

[global]
quiet = true

[bdist_wheel]
universal = false
keep_temp = false

[sdist]
formats = gztar

[coverage:run]
omit =
    bentoml/__main__.py
    bentoml/_internal/types.py
    bentoml/_internal/external_typing/*
    bentoml/testing/*
    bentoml/io.py

[coverage:report]
show_missing = true
precision = 2
omit =
    bentoml/_internal/external_typing/*
    bentoml/_internal/types.py
    bentoml/testing/*
    bentoml/__main__.py
    bentoml/io.py
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    raise MissingDependencyException
    except ImportError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
