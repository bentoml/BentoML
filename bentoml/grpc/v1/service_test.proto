syntax = "proto3";

package bentoml.testing.v1;

option cc_enable_arenas = true;
option cc_generic_services = true;
option go_package = "github.com/bentoml/testing/v1";
option optimize_for = SPEED;
option py_generic_services = true;

// Represents a request for TestService.
message ExecuteRequest {
  string input = 1;
}

// Represents a response from TestService.
message ExecuteResponse {
  string output = 1;
}

// Use for testing interceptors per RPC call.
service TestService {
  // Unary API
  rpc Execute(ExecuteRequest) returns (ExecuteResponse);
  // Client-streaming API
  rpc ClientStreamExecute(stream ExecuteRequest) returns (ExecuteResponse);
  // Server-streaming API
  rpc ServerStreamExecute(ExecuteRequest) returns (stream ExecuteResponse);
  // Bidirectional streaming API
  rpc BidiStreamExecute(stream ExecuteRequest) returns (stream ExecuteResponse);
}
