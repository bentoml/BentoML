name: CI

on:
  push:
    branches:
      - master
      - bentoml-1.0
  pull_request:
    branches:
      - master
      - bentoml-1.0
  schedule:
    - cron: '0 0 * * 1/2'

jobs:
  lint_and_format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install test dependencies
        run: ./ci/install_dependencies.sh.cmd
      - name: Run linting script
        run: ./ci/format_and_lint.sh

  documentation_spelling_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Run spellcheck script
        run: ./ci/docs_spell_check.sh

  unit_tests:
    name: python${{ matrix.python-version }}_unit_tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [ '3.7', '3.8', '3.9' ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install test dependencies
        run: ./ci/install_dependencies.sh.cmd
        shell: bash
      - name: Run Unit Tests
        run: ./ci/unit_tests.sh
        shell: bash
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12
        with:
          name: codecov-${{ matrix.os}}-python${{ matrix.python-version }}
          fail_ci_if_error: true

  bento_server_integration_tests:
    name: bento_server_integration_tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        # TODO(bojiang): Fixes windows path problem
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install test dependencies
        run: ./ci/install_dependencies.sh.cmd
      - name: install optional dependencies
        run: python -m pip install pydantic
      - name: Run tests
        run: pytest tests/integration/projects/general --project-root tests/integration/projects/general -vvv --capture=tee-sys
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1.0.12

concurrency:
  group: ci-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
