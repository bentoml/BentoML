class Pattern:
    __slots__ = ...
    def __init__(self, include: Optional[bool]) -> None: ...
    def match(self, files: Iterable[Text]) -> Iterator[Text]: ...

class RegexPattern(Pattern):
    __slots__ = ...
    def __init__(
        self, pattern: Union[AnyStr, RegexHint], include: Optional[bool] = ...
    ) -> None: ...
    def __eq__(self, other: RegexPattern) -> bool: ...
    def match(self, files: Iterable[Text]) -> Iterable[Text]: ...
    @classmethod
    def pattern_to_regex(cls, pattern: Text) -> Tuple[Text, bool]: ...
