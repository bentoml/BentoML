import numpy as np
from pandas.core.arrays import (
    Categorical,
    DatetimeArray,
    IntervalArray,
    PeriodArray,
    TimedeltaArray,
)
from pandas.core.arrays._mixins import NDArrayBackedExtensionArray
from pandas.core.indexes.base import Index
from pandas.util._decorators import doc

_T = ...

def inherit_from_data(name: str, delegate, cache: bool = ..., wrap: bool = ...): ...
def inherit_names(names: list[str], delegate, cache: bool = ..., wrap: bool = ...): ...
def make_wrapped_arith_op(opname: str): ...

class ExtensionIndex(Index):
    _data: IntervalArray | NDArrayBackedExtensionArray
    _data_cls: (
        type[Categorical]
        | type[DatetimeArray]
        | type[TimedeltaArray]
        | type[PeriodArray]
        | type[IntervalArray]
    )
    __eq__ = ...
    __ne__ = ...
    __lt__ = ...
    __gt__ = ...
    __le__ = ...
    __ge__ = ...
    def __getitem__(self, key): ...
    def searchsorted(self, value, side=..., sorter=...) -> np.ndarray: ...
    def putmask(self, mask, value) -> Index: ...
    def delete(self, loc): ...
    def repeat(self, repeats, axis=...): ...
    def insert(self, loc: int, item) -> Index: ...
    @doc(Index.map)
    def map(self, mapper, na_action=...): ...
    @doc(Index.astype)
    def astype(self, dtype, copy: bool = ...) -> Index: ...
    @doc(Index.equals)
    def equals(self, other) -> bool: ...

class NDArrayBackedExtensionIndex(ExtensionIndex):
    _data: NDArrayBackedExtensionArray

...
