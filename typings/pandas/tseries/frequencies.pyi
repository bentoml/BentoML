from pandas._libs.tslibs.offsets import DateOffset
from pandas.util._decorators import cache_readonly

_ONE_MICRO = ...
_ONE_MILLI = ...
_ONE_SECOND = ...
_ONE_MINUTE = ...
_ONE_HOUR = ...
_ONE_DAY = ...
_offset_to_period_map = ...
_need_suffix = ...

def get_period_alias(offset_str: str) -> str | None: ...
def get_offset(name: str) -> DateOffset: ...
def infer_freq(index, warn: bool = ...) -> str | None: ...

class _FrequencyInferer:
    def __init__(self, index, warn: bool = ...) -> None: ...
    @cache_readonly
    def deltas(self): ...
    @cache_readonly
    def deltas_asi8(self): ...
    @cache_readonly
    def is_unique(self) -> bool: ...
    @cache_readonly
    def is_unique_asi8(self) -> bool: ...
    def get_freq(self) -> str | None: ...
    @cache_readonly
    def day_deltas(self): ...
    @cache_readonly
    def hour_deltas(self): ...
    @cache_readonly
    def fields(self): ...
    @cache_readonly
    def rep_stamp(self): ...
    def month_position_check(self): ...
    @cache_readonly
    def mdiffs(self): ...
    @cache_readonly
    def ydiffs(self): ...

class _TimedeltaFrequencyInferer(_FrequencyInferer): ...

def is_subperiod(source, target) -> bool: ...
def is_superperiod(source, target) -> bool: ...
