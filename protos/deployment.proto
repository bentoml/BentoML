syntax = "proto3";
package bentoml;

import "status.proto";

message SagemakerConfig {
  string region = 1;
  string instance_type = 2;
  int32 instance_count = 3;
  string api_name = 4;
}

message AwsLambdaConfig {
  string region = 1;
  string stage = 2;
}

message GcpFunctionConfig {
  string region = 1;
  string stage = 2;
}

message KubernetesConfig {
  string kube_namespace = 1;
  int32 replicas = 2;
  string service_name = 3;
  string service_type = 4;
}

enum DeployPlatform {
  AWS_SAGEMAKER = 0;
  AWS_LAMBDA = 1;
  GCP_FUNCTION = 2;
  KUBERNETES = 3;
  KNATIVE = 4;
}

message DeploymentSpec {
  string bento_name = 1;
  string bento_version = 2;

  DeployPlatform platform = 3;

  oneof platform_config {
    SagemakerConfig sagemaker_config = 4;
    AwsLambdaConfig aws_lambda_config = 5;
    GcpFunctionConfig gcp_function_config = 6;
    KubernetesConfig kubernetes_config = 7;
  }
}

message DeploymentState {
  enum State {
    PENDING = 0;
    RUNNING = 1;
    SUCCEEDED = 2;
    FAILED = 3;
    UNKNOWN = 4;
    COMPLETED = 5;
    CRASH_LOOP_BACK_OFF = 6;
    ERROR = 7;
    INACTIVATED = 8;
  }

  State state = 1;
  string error_message = 2;
  string info_json = 3;
}

message Deployment {
  string namespace = 1;
  string name = 2;

  DeploymentSpec spec = 3;
  DeploymentState state = 4;

  map<string, string> annotations = 5;
  map<string, string> labels = 6;
}

message DeploymentStatus {
  DeploymentState state = 1;
}


// Requests
message ApplyDeploymentRequest {
  Deployment deployment = 1;
}

message DeleteDeploymentRequest {
  string deployment_name = 1;
}

message GetDeploymentRequest {
  string deployment_name = 1;
}

message DescribeDeploymentRequest {
  string deployment_name = 1;
}

message ListDeploymentsRequest {
  int32 offset = 1;
  int32 limit = 2;
  string filter = 3;
  map<string, string> labels = 4;
}

// Responses
message ApplyDeploymentResponse {
  Status status = 1;
  Deployment deployment = 2;
}

message DeleteDeploymentResponse {
  Status status = 1;
}

message GetDeploymentResponse {
  Status status = 1;
  Deployment deployment = 2;
}

message DescribeDeploymentResponse {
  Status status = 1;
  DeploymentSpec spec = 2;
}

message ListDeploymentsResponse {
  Status status = 1;
  repeated Deployment deployments = 2;
}