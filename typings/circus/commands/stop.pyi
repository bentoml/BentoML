"""
This type stub file was generated by pyright.
"""

from circus.commands.base import Command

class Stop(Command):
    """\
        Stop watchers
        =============

        This command stops a given watcher or all watchers.

        ZMQ Message
        -----------

        ::

            {
                "command": "stop",
                "properties": {
                    "name": "<name>",
                    "waiting": False,
                    "match": "[simple|glob|regex]"
                }
            }

        The response returns the status "ok".

        If the ``name`` property is present, then the stop will be applied
        to the watcher corresponding to that name. Otherwise, all watchers
        will get stopped.

        If ``waiting`` is False (default), the call will return immediatly
        after calling `stop_signal` on each process.

        If ``waiting`` is True, the call will return only when the stop process
        is completly ended. Because of the
        :ref:`graceful_timeout option <graceful_timeout>`, it can take some
        time.

        The ``match`` parameter can have the value ``simple`` for string
        compare, ``glob`` for wildcard matching (default) or ``regex`` for
        regex matching.


        Command line
        ------------

        ::

            $ circusctl stop [name] [--waiting] [--match=simple|glob|regex]

        Options
        +++++++

        - <name>: name or pattern of the watcher(s)
        - <match>: watcher match method
    """
    name = ...
    options = ...
    def message(self, *args, **opts): # -> dict[str, Unknown | dict[str, Unknown] | None]:
        ...
    
    def execute(self, arbiter, props): # -> TransformableFuture | Any:
        ...
    


