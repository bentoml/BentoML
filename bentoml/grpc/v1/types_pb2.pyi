"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _DataType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DataTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DataType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    DT_UNSPECIFIED: _DataType.ValueType  # 0
    """Not a legal value for DataType.  Used to indicate a DataType field
    has not been set.
    """

    DT_FLOAT: _DataType.ValueType  # 1
    """Data types that all computation devices are expected to be
    capable to support.
    """

    DT_DOUBLE: _DataType.ValueType  # 2
    DT_INT32: _DataType.ValueType  # 3
    DT_UINT8: _DataType.ValueType  # 4
    DT_INT16: _DataType.ValueType  # 5
    DT_INT8: _DataType.ValueType  # 6
    DT_STRING: _DataType.ValueType  # 7
    DT_COMPLEX64: _DataType.ValueType  # 8
    """Single-precision complex"""

    DT_INT64: _DataType.ValueType  # 9
    DT_BOOL: _DataType.ValueType  # 10
    DT_QINT8: _DataType.ValueType  # 11
    """Quantized int8"""

    DT_QUINT8: _DataType.ValueType  # 12
    """Quantized uint8"""

    DT_QINT32: _DataType.ValueType  # 13
    """Quantized int32"""

    DT_BFLOAT16: _DataType.ValueType  # 14
    """Float32 truncated to 16 bits.  Only for cast ops."""

    DT_QINT16: _DataType.ValueType  # 15
    """Quantized int16"""

    DT_QUINT16: _DataType.ValueType  # 16
    """Quantized uint16"""

    DT_UINT16: _DataType.ValueType  # 17
    DT_COMPLEX128: _DataType.ValueType  # 18
    """Double-precision complex"""

    DT_HALF: _DataType.ValueType  # 19
    """Represents half data type (32 -> 16 bits)."""

    DT_UINT32: _DataType.ValueType  # 20
    DT_UINT64: _DataType.ValueType  # 21
class DataType(_DataType, metaclass=_DataTypeEnumTypeWrapper):
    """partial verbatim from tensorflow/core/framework/types.proto"""
    pass

DT_UNSPECIFIED: DataType.ValueType  # 0
"""Not a legal value for DataType.  Used to indicate a DataType field
has not been set.
"""

DT_FLOAT: DataType.ValueType  # 1
"""Data types that all computation devices are expected to be
capable to support.
"""

DT_DOUBLE: DataType.ValueType  # 2
DT_INT32: DataType.ValueType  # 3
DT_UINT8: DataType.ValueType  # 4
DT_INT16: DataType.ValueType  # 5
DT_INT8: DataType.ValueType  # 6
DT_STRING: DataType.ValueType  # 7
DT_COMPLEX64: DataType.ValueType  # 8
"""Single-precision complex"""

DT_INT64: DataType.ValueType  # 9
DT_BOOL: DataType.ValueType  # 10
DT_QINT8: DataType.ValueType  # 11
"""Quantized int8"""

DT_QUINT8: DataType.ValueType  # 12
"""Quantized uint8"""

DT_QINT32: DataType.ValueType  # 13
"""Quantized int32"""

DT_BFLOAT16: DataType.ValueType  # 14
"""Float32 truncated to 16 bits.  Only for cast ops."""

DT_QINT16: DataType.ValueType  # 15
"""Quantized int16"""

DT_QUINT16: DataType.ValueType  # 16
"""Quantized uint16"""

DT_UINT16: DataType.ValueType  # 17
DT_COMPLEX128: DataType.ValueType  # 18
"""Double-precision complex"""

DT_HALF: DataType.ValueType  # 19
"""Represents half data type (32 -> 16 bits)."""

DT_UINT32: DataType.ValueType  # 20
DT_UINT64: DataType.ValueType  # 21
global___DataType = DataType

