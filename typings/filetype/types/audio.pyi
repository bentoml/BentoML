"""
This type stub file was generated by pyright.
"""

from .base import Type

class Midi(Type):
    """
    Implements the Midi audio type matcher.
    """
    MIME = ...
    EXTENSION = ...
    def __init__(self) -> None:
        ...
    
    def match(self, buf): # -> Literal[False]:
        ...
    


class Mp3(Type):
    """
    Implements the MP3 audio type matcher.
    """
    MIME = ...
    EXTENSION = ...
    def __init__(self) -> None:
        ...
    
    def match(self, buf): # -> Literal[False]:
        ...
    


class M4a(Type):
    """
    Implements the M4A audio type matcher.
    """
    MIME = ...
    EXTENSION = ...
    def __init__(self) -> None:
        ...
    
    def match(self, buf): # -> Literal[False]:
        ...
    


class Ogg(Type):
    """
    Implements the OGG audio type matcher.
    """
    MIME = ...
    EXTENSION = ...
    def __init__(self) -> None:
        ...
    
    def match(self, buf): # -> Literal[False]:
        ...
    


class Flac(Type):
    """
    Implements the FLAC audio type matcher.
    """
    MIME = ...
    EXTENSION = ...
    def __init__(self) -> None:
        ...
    
    def match(self, buf): # -> Literal[False]:
        ...
    


class Wav(Type):
    """
    Implements the WAV audio type matcher.
    """
    MIME = ...
    EXTENSION = ...
    def __init__(self) -> None:
        ...
    
    def match(self, buf): # -> Literal[False]:
        ...
    


class Amr(Type):
    """
    Implements the AMR audio type matcher.
    """
    MIME = ...
    EXTENSION = ...
    def __init__(self) -> None:
        ...
    
    def match(self, buf): # -> Literal[False]:
        ...
    


class Aac(Type):
    """Implements the Aac audio type matcher."""
    MIME = ...
    EXTENSION = ...
    def __init__(self) -> None:
        ...
    
    def match(self, buf):
        ...
    


class Aiff(Type):
    """
    Implements the AIFF audio type matcher.
    """
    MIME = ...
    EXTENSION = ...
    def __init__(self) -> None:
        ...
    
    def match(self, buf): # -> Literal[False]:
        ...
    


