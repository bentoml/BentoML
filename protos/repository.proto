syntax = "proto3";
package bentoml;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

import "status.proto";
import "label_selectors.proto";


message BentoUri {
  enum StorageType {
    UNSET = 0;
    LOCAL = 1;
    S3 = 2;
    GCS = 3;
    AZURE_BLOB_STORAGE = 4;
    HDFS = 5;
  }

  StorageType type = 1;
  string uri = 2;
  string s3_presigned_url = 3;
  string gcs_presigned_url = 4;
}

message BentoServiceMetadata {
  message BentoServiceEnv {
    string setup_sh = 1;
    string conda_env = 2;
    string pip_dependencies = 3; // deprecated, in favor of pip_packages below
    string python_version = 4;
    string docker_base_image = 5;
    repeated string pip_packages = 6;
  }

  message BentoArtifact {
    string name = 1;
    string artifact_type = 2;
    google.protobuf.Struct metadata = 3;
  }

  message BentoServiceApi {
    string name = 1;
    string input_type = 2;
    string docs = 3;
    google.protobuf.Struct input_config = 4;
    google.protobuf.Struct output_config = 5;
    string output_type = 6;
    int32 mb_max_latency = 7;
    int32 mb_max_batch_size = 8;
    bool batch = 9;
  }

  string name = 1;
  string version = 2;
  google.protobuf.Timestamp created_at = 3;
  BentoServiceEnv env = 4;
  repeated BentoArtifact artifacts = 5;
  repeated BentoServiceApi apis = 6;
  // Optional, used for managing BentoService
  map<string, string> labels = 7;
}

message Bento {
  string name = 1;
  string version = 2;
  BentoUri uri = 3;
  BentoServiceMetadata bento_service_metadata = 4;
  UploadStatus status = 5;
}

message AddBentoRequest {
  string bento_name = 1;
  string bento_version = 2;
}

message AddBentoResponse {
  Status status = 1;
  BentoUri uri = 2;
}

message UploadStatus {
  enum Status {
    UNINITIALIZED = 0; // default
    UPLOADING = 1;
    DONE = 2;
    ERROR = 3;
    TIMEOUT = 4;
  }
  Status status = 1;
  google.protobuf.Timestamp updated_at = 2;
  int32 percentage = 3; // for uploading completion percentage
  string error_message = 4; // for error message
}

message UpdateBentoRequest {
  string bento_name = 1;
  string bento_version = 2;
  UploadStatus upload_status = 3;
  BentoServiceMetadata service_metadata = 4;
}

message UpdateBentoResponse {
  Status status = 1;
}

message DangerouslyDeleteBentoRequest {
  string bento_name = 1;
  string bento_version = 2;
}

message DangerouslyDeleteBentoResponse {
  Status status = 1;
}

message GetBentoRequest {
  string bento_name = 1;
  string bento_version = 2;
}

message GetBentoResponse {
  Status status = 1;
  Bento bento = 2;
}

message ListBentoRequest {
  enum SORTABLE_COLUMN {
    created_at = 0;
    name = 1;
  }
  string bento_name = 1;
  int32 offset = 2;
  int32 limit = 3;
  SORTABLE_COLUMN order_by = 4;
  bool ascending_order = 5;
  LabelSelectors label_selectors = 6;
}

message ListBentoResponse {
  Status status = 1;
  repeated Bento bentos = 2;
}

message ContainerizeBentoRequest {
  string bento_name = 1;
  string bento_version = 2;
  string tag = 3;
  map<string, string> build_args = 4;
  bool push = 5;
}

message ContainerizeBentoResponse {
  Status status = 1;
  string tag = 2;
}
