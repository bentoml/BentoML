// Verbatim sources from google/rpc/status.proto
syntax = "proto3";

package bentoml.grpc.verbatim;

import "google/protobuf/any.proto";

option cc_enable_arenas = true;
option go_package = "github.com/bentoml/grpc/verbatim/status;rpcstatus";
option java_multiple_files = true;
option java_outer_classname = "StatusProto";
option java_package = "com.bentoml.grpc.verbatim";
option objc_class_prefix = "RPC";

// The `Status` type defines a logical error model that is suitable for
// different programming environments, including REST APIs and RPC APIs. It is
// used by [gRPC](https://github.com/grpc). Each `Status` message contains
// three pieces of data: error code, error message, and error details.
//
// You can find out more about this error model and how to work with it in the
// [API Design Guide](https://cloud.google.com/apis/design/errors).
message Status {
  // The status code, which should be an enum value of [bentoml.grpc.verbatim.Code][bentoml.grpc.verbatim.Code].
  int32 code = 1;

  // A developer-facing error message, which should be in English. Any
  // user-facing error message should be localized and sent in the
  // [bentoml.grpc.verbatim.Status.details][bentoml.grpc.verbatim.Status.details] field, or localized by the client.
  string message = 2;

  // A list of messages that carry the error details.  There is a common set of
  // message types for APIs to use.
  repeated google.protobuf.Any details = 3;
}
