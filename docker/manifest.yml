# NOTE: some of the comments here are for my own sanity. :)
specs:
  # supports all custom registries and official: GCR, ECR, Heroku, Quay.io, Docker.io
  repository: &repository_spec
    user: HUB_USERNAME
    pwd: HUB_PASSWORD
    registry:
      bento-server: docker.io/bentoml/bento-server

  # BentoML docker tag specification
  tag:
    fmt: "{release_type}-python{python_version}-{suffixes}"
    release_type:
    python_version:
    suffixes:

  # CUDA related dependencies
  cuda: &cuda_lib
    components:
      cudart:
        version:
      cudnn8:
        version:
      libcublas:
        version:
      libcurand:
        version:
      libcusparse:
        version:
      libcufft:
        version:
      libcusolver:
        version:
    requires: _
    repo_url: _
    ml_repo_url: _

  
  # dependencies to manage different architectures.
  dependencies: &arch_depedencies
    amd64:
      cuda:
        <<: *cuda_lib
    arm64v8:
      cuda:
        <<: *cuda_lib
    ppc64le:
      cuda:
        <<: *cuda_lib

  # NOTE: The spec defines components of each distros fields and specification
  releases_spec:
    common: &shared
      templates_dir: _
      base_image: _
      suffixes: _
      multistage_image: True
      header: |
        # syntax = docker/dockerfile:1.2
        #
        # ===========================================
        #
        # THIS IS A GENERATED DOCKERFILE DO NOT EDIT.
        #
        # ===========================================
      envars:
        - LANG=C.UTF-8
        - LC_ALL=C.UTF-8
        - PYTHONDONTWRITEBYTECODE=1
      architectures:
        - "amd64"
        - "arm32v5"
        - "arm32v6"
        - "arm32v7"
        - "arm64v8"
        - "i386"
        - "ppc64le"
        - "s390x"
        - "riscv64"

    deprecated: &deprecated  # NOTE: for history purposes, this is the structured used before multi-arch support.
      <<: *shared
      cuda:
        <<: *cuda_lib
        prefix_url: _
        requires: "cuda>=11.3 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 driver>=450"

    multiarch: &multiarch  # NOTE: should be the default from now on
      << : *shared
      dependencies:
        <<: *arch_depedencies

##########################
# DEFINITION STARTS HERE #
##########################

repository:
  docker:
    <<: *repository_spec

# NOTE: all CUDA related dependencies specify below
# * There should be a anchor called `requires_<cuda_version>` to specify all
# * drivers requirements with `nvidia-docker`. Refers to CUDA repos to check
# * these drivers requirements
cuda:
  requires_11_5_1: &requires_11_5_1
    requires: "cuda>=11.5 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 brand=tesla,driver>=450,driver<451 brand=tesla,driver>=460,driver<461 brand=tesla,driver>=470,driver<471"
  11.5.1: &cuda11_5_1
    <<: *arch_depedencies
    amd64: &cuda11_5_1_amd64  # for nvidia this is x86_64
      <<: *requires_11_5_1
      components:
        cudart:
          version: 11.5.117-1
        cudart_dev:
          version: 11.5.117-1
        libcublas:
          version: 11.7.4.6-1
        libcublas_dev:
          version: 11.7.4.6-1
        libcusparse:
          version: 11.7.0.107-1
        libcusparse_dev:
          version: 11.7.0.107-1
        libnpp:
          version: 11.5.1.107-1
        libnpp_dev:
          version: 11.5.1.107-1
        nvml_dev:
          version: 11.5.50-1
        nvtx:
          version: 11.5.114-1
        libnccl2:
          version: 2.11.4-1
        libnccl2_dev:
          version: 2.11.4-1
        cudnn8:
          version: 8.3.1.22-1
        nvprof:
          version: 11.5.114-1
    arm64v8: &cuda11_5_1_arm64v8  # for nvidia this is sbsa
      components:
        cudart:
          version: 11.5.117-1
        cudart_dev:
          version: 11.5.117-1
        libcublas:
          version: 11.7.4.6-1
        libcublas_dev:
          version: 11.7.4.6-1
        libcusparse:
          version: 11.7.0.107-1
        libcusparse_dev:
          version: 11.7.0.107-1
        libnpp:
          version: 11.5.1.107-1
        libnpp_dev:
          version: 11.5.1.107-1
        nvml_dev:
          version: 11.5.50-1
        nvtx:
          version: 11.5.114-1
        libnccl2:
          version: 2.11.4-1
        libnccl2_dev:
          version: 2.11.4-1
        cudnn8:
          version: 8.3.1.22-1
        nvprof:
          version: 11.5.114-1
      requires: 'cuda>=11.5'
    ppc64le: &cuda11_5_1_ppc64le
      components:
        cudart:
          version: 11.5.117-1
        cudart_dev:
          version: 11.5.117-1
        libcublas:
          version: 11.7.4.6-1
        libcublas_dev:
          version: 11.7.4.6-1
        libnpp:
          version: 11.5.1.107-1
        libnpp_dev:
          version: 11.5.1.107-1
        nvml_dev:
          version: 11.5.50-1
        nvprof:
          version: 11.5.114-1
        nvtx:
          version: 11.5.114-1
        libnccl2:
          version: 2.11.4-1
        libnccl2_dev:
          version: 2.11.4-1
        cudnn8:
          version: 8.3.1.22-1
      requires: 'cuda>=11.5'

  # NOTE: THIS MAINLY SERVES FOR HISTORY PURPOSES
  11.3.1: &cuda11_3_1
    <<: *cuda_lib
    cudart: 11.3.109-1
    cudnn8: 8.2.0.53-1
    libcublas: 11.5.1.109-1
    libcurand: 10.2.4.109-1
    libcusparse: 11.6.0.109-1
    libcufft: 10.4.2.109-1
    libcusolver: 11.1.2.109-1

##########################################
# manager.py should only care about this #
##########################################
releases:
  w_cuda_v11.5.1:
    debian11:
      <<: *multiarch
      templates_dir: templates/debian
      base_image: debian:11-slim
      suffixes: "debian11"
      dependencies:
        amd64:
          cuda:
            <<: *cuda11_5_1_amd64
            repo_url: "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64"
            ml_repo_url: "https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2004/x86_64"
        arm64v8:
          cuda:
            <<: *cuda11_5_1_arm64v8
            repo_url: "http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/sbsa"
            ml_repo_url: "https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2004/sbsa"

    debian10:
      <<: *multiarch
      templates_dir: templates/debian
      base_image: debian:10-slim
      suffixes: "debian10"
      dependencies:
        amd64:
          cuda:
            <<: *cuda11_5_1_amd64
            repo_url: "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64"
            ml_repo_url: "https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2004/x86_64"
        arm64v8:
          cuda:
            <<: *cuda11_5_1_arm64v8
            repo_url: "http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/sbsa"
            ml_repo_url: "https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2004/sbsa"

    ubi8:
      <<: *multiarch
      templates_dir: templates/rhel
      base_image: registry.access.redhat.com/ubi8/ubi:latest
      suffixes: "ubi8"
      dependencies:
        <<: *cuda11_5_1
        amd64:
          cuda:
            <<: *cuda11_5_1_amd64
            repo_url: "https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64"
            ml_repo_url: "https://developer.download.nvidia.com/compute/machine-learning/repos/rhel8/x86_64"
        arm64v8:
          cuda:
            <<: *cuda11_5_1_arm64v8
            repo_url: "https://developer.download.nvidia.com/compute/cuda/repos/rhel8/sbsa"
            ml_repo_url: "https://developer.download.nvidia.com/compute/machine-learning/repos/rhel8/sbsa"
        ppc64le:
          cuda:
            <<: *cuda11_5_1_ppc64le
            repo_url: "https://developer.download.nvidia.com/compute/cuda/repos/rhel8/ppc64le"
            ml_repo_url: "https://developer.download.nvidia.com/compute/machine-learning/repos/rhel8/ppc64le"

    ubi7:
      <<: *multiarch
      templates_dir: templates/rhel
      base_image: registry.access.redhat.com/ubi7/ubi:latest
      suffixes: "ubi7"
      dependencies:
        <<: *cuda11_5_1
        amd64:
          cuda:
            <<: *cuda11_5_1_amd64
            repo_url: "https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64"
            ml_repo_url: "https://developer.download.nvidia.com/compute/machine-learning/repos/rhel7/x86_64"
        arm64v8:
          cuda:
            <<: *cuda11_5_1_arm64v8
            repo_url: "https://developer.download.nvidia.com/compute/cuda/repos/rhel7/sbsa"
            ml_repo_url: "https://developer.download.nvidia.com/compute/machine-learning/repos/rhel7/sbsa"
        ppc64le:
          cuda:
            <<: *cuda11_5_1_ppc64le
            repo_url: "https://developer.download.nvidia.com/compute/cuda/repos/rhel7/ppc64le"
            ml_repo_url: "https://developer.download.nvidia.com/compute/machine-learning/repos/rhel7/ppc64le"


    amazonlinux2:
      <<: *multiarch
      templates_dir: templates/rhel
      base_image: amazonlinux:2
      suffixes: "amazonlinux2"
      dependencies: {}

    alpine3.14:
      <<: *multiarch
      templates_dir: templates/alpine
      base_image: alpine:3.14
      suffixes: "alpine3.14"
      dependencies: {}


  w_cuda_v11.3.1:
    debian10:
      <<: *deprecated
      templates_dir: templates/debian/legacy
      base_image: debian:buster-slim
      suffixes: "debian"
      cuda:
        <<: *cuda11_3_1
        prefix_url: "ubuntu2004"

    ubi8:
      <<: *deprecated
      templates_dir: templates/rhel/legacy
      base_image: registry.access.redhat.com/ubi8/ubi:latest
      suffixes: "ubi8"
      cuda:
        <<: *cuda11_3_1
        prefix_url: "rhel8"

    ubi7:
      <<: *deprecated
      templates_dir: templates/rhel/legacy
      base_image: registry.access.redhat.com/ubi7/ubi:latest
      suffixes: "ubi7"
      cuda:
        <<: *cuda11_3_1
        prefix_url: "rhel7"

    amazonlinux2:
      <<: *deprecated
      templates_dir: templates/rhel/legacy
      base_image: amazonlinux:2
      suffixes: "amazonlinux2"

    alpine3.14:
      <<: *deprecated
      templates_dir: templates/alpine/legacy
      base_image: alpine:3.14
      suffixes: "alpine3.14"



# NOTE: Linux distros for each package are defined below:
# * currently there's only one package `bento-server`
# * distros are defined as <distro_releases><distro_version>
packages:
  bento-server:
    devel: &core
      ? debian11
      ? debian10
      ? ubi8
      ? ubi7
    base: &all
      <<: *core
      ? amazonlinux2
      ? alpine3.14
    cudnn:
      <<: *core
    runtime:
      <<: *all
