from .onnx_quantizer import ONNXQuantizer

class QDQQuantizer(ONNXQuantizer):
    def __init__(
        self,
        model,
        per_channel,
        reduce_range,
        mode,
        static,
        weight_qType,
        input_qType,
        tensors_range,
        nodes_to_quantize,
        nodes_to_exclude,
        op_types_to_quantize,
        extra_options=...,
    ) -> None: ...
    def quantize_tensor(self, tensor_name): ...
    def quantize_tensor_per_channel(self, tensor_name, axis): ...
    def quantize_bias_tensor(self, bias_name, input_name, weight_name): ...
    def remove_node(self, node): ...
    def remove_nodes(self): ...
    def quantize_model(self): ...
    def try_replacing_upstream_output(self, upstream_output_name, output_name): ...
    def quantize_tensors(self): ...
    def quantize_bias_tensors(self): ...
    def quantize_weights_per_channel(self): ...
