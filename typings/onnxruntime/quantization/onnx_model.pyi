class ONNXModel:
    def __init__(self, model) -> None: ...
    def nodes(self): ...
    def initializer(self): ...
    def graph(self): ...
    def ir_version(self): ...
    def opset_import(self): ...
    def remove_node(self, node): ...
    def remove_nodes(self, nodes_to_remove): ...
    def add_node(self, node): ...
    def add_nodes(self, nodes_to_add): ...
    def add_initializer(self, tensor): ...
    def get_initializer(self, name): ...
    def get_initializer_name_set(self): ...
    def remove_initializer(self, tensor): ...
    def remove_initializers(self, init_to_remove): ...
    def get_non_initializer_inputs(self): ...
    def input_name_to_nodes(self): ...
    def output_name_to_node(self): ...
    def get_children(self, node, input_name_to_nodes=...): ...
    def get_parents(self, node, output_name_to_node=...): ...
    def get_parent(self, node, idx, output_name_to_node=...): ...
    def find_node_by_name(self, node_name, new_nodes_list, graph): ...
    def find_nodes_by_initializer(self, graph, initializer): ...
    def replace_gemm_with_matmul(self): ...
    def save_model_to_file(self, output_path, use_external_data_format=...): ...
    @staticmethod
    def replace_node_input(node, old_input_name, new_input_name): ...
    def replace_input_of_all_nodes(self, old_input_name, new_input_name): ...
    @staticmethod
    def replace_node_output(node, old_output_name, new_output_name): ...
    def replace_output_of_all_nodes(self, old_output_name, new_output_name): ...
    def remove_unused_constant(self): ...
    def is_graph_output(self, output_name): ...
