from pandas.compat.chainmap import DeepChainMap

def ensure_scope(
    level: int, global_dict=..., local_dict=..., resolvers=..., target=..., **kwargs
) -> Scope: ...

DEFAULT_GLOBALS = ...

class Scope:
    __slots__ = ...
    level: int
    scope: DeepChainMap
    resolvers: DeepChainMap
    temps: dict
    def __init__(
        self, level: int, global_dict=..., local_dict=..., resolvers=..., target=...
    ) -> None: ...
    def __repr__(self) -> str: ...
    @property
    def has_resolvers(self) -> bool: ...
    def resolve(self, key: str, is_local: bool): ...
    def swapkey(self, old_key: str, new_key: str, new_value=...) -> None: ...
    def add_tmp(self, value) -> str: ...
    @property
    def ntemps(self) -> int: ...
    @property
    def full_scope(self) -> DeepChainMap: ...
