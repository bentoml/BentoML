import sys

if sys.version_info >= (3, 5, 3): ...
else: ...
if sys.version_info >= (3, 8): ...
else: ...
DEFAULT_PROTOCOL = ...
_PICKLE_BY_VALUE_MODULES = ...
_DYNAMIC_CLASS_TRACKER_BY_CLASS = ...
_DYNAMIC_CLASS_TRACKER_BY_ID = ...
_DYNAMIC_CLASS_TRACKER_LOCK = ...
PYPY = ...
builtin_code_type = ...
if PYPY:
    builtin_code_type = ...
_extract_code_globals_cache = ...

def register_pickle_by_value(module): ...
def unregister_pickle_by_value(module): ...
def list_registry_pickle_by_value(): ...
def cell_set(cell, value): ...

if sys.version_info[:2] < (3, 7):
    _cell_set_template_code = ...
STORE_GLOBAL = ...
DELETE_GLOBAL = ...
LOAD_GLOBAL = ...
GLOBAL_OPS = ...
HAVE_ARGUMENT = ...
EXTENDED_ARG = ...
_BUILTIN_TYPE_NAMES = ...
if sys.version_info[:2] < (3, 7): ...
else:
    _is_parametrized_type_hint = ...
    _create_parametrized_type_hint = ...

def parametrized_type_hint_getinitargs(obj): ...
def is_tornado_coroutine(func): ...

load = ...
loads = ...

def subimport(name): ...
def dynamic_subimport(name, vars): ...
def instance(cls): ...
@instance
class _empty_cell_value:
    @classmethod
    def __reduce__(cls): ...
