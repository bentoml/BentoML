"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class LabelSelectors(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelSelectorExpression(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class OPERATOR_TYPE(metaclass=_OPERATOR_TYPE):
            V = typing.NewType('V', builtins.int)

        In = LabelSelectors.LabelSelectorExpression.OPERATOR_TYPE.V(0)
        NotIn = LabelSelectors.LabelSelectorExpression.OPERATOR_TYPE.V(1)
        Exists = LabelSelectors.LabelSelectorExpression.OPERATOR_TYPE.V(2)
        DoesNotExist = LabelSelectors.LabelSelectorExpression.OPERATOR_TYPE.V(3)

        class _OPERATOR_TYPE(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[OPERATOR_TYPE.V], builtins.type):  # type: ignore
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            In = LabelSelectors.LabelSelectorExpression.OPERATOR_TYPE.V(0)
            NotIn = LabelSelectors.LabelSelectorExpression.OPERATOR_TYPE.V(1)
            Exists = LabelSelectors.LabelSelectorExpression.OPERATOR_TYPE.V(2)
            DoesNotExist = LabelSelectors.LabelSelectorExpression.OPERATOR_TYPE.V(3)

        OPERATOR_FIELD_NUMBER: builtins.int
        KEY_FIELD_NUMBER: builtins.int
        VALUES_FIELD_NUMBER: builtins.int
        operator: global___LabelSelectors.LabelSelectorExpression.OPERATOR_TYPE.V = ...
        key: typing.Text = ...

        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...

        def __init__(self,
            *,
            operator : global___LabelSelectors.LabelSelectorExpression.OPERATOR_TYPE.V = ...,
            key : typing.Text = ...,
            values : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"operator",b"operator",u"values",b"values"]) -> None: ...

    class MatchLabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...

        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    MATCH_LABELS_FIELD_NUMBER: builtins.int
    MATCH_EXPRESSIONS_FIELD_NUMBER: builtins.int

    @property
    def match_labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...

    @property
    def match_expressions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LabelSelectors.LabelSelectorExpression]: ...

    def __init__(self,
        *,
        match_labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        match_expressions : typing.Optional[typing.Iterable[global___LabelSelectors.LabelSelectorExpression]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"match_expressions",b"match_expressions",u"match_labels",b"match_labels"]) -> None: ...
global___LabelSelectors = LabelSelectors
