import typing
from typing import Callable, Iterable, Pattern, Text, Tuple
from .lrucache import LRUCache

if typing.TYPE_CHECKING: ...
_PATTERN_CACHE: LRUCache[Tuple[Text, bool], Pattern] = ...

def match(pattern: Text, name: Text) -> bool: ...
def imatch(pattern: Text, name: Text) -> bool: ...
def match_any(patterns: Iterable[Text], name: Text) -> bool: ...
def imatch_any(patterns: Iterable[Text], name: Text) -> bool: ...
def get_matcher(
    patterns: Iterable[Text], case_sensitive: bool
) -> Callable[[Text], bool]: ...
