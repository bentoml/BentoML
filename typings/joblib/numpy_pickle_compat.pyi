import os
from pathlib import Path
from io import BytesIO, BufferedReader
from typing import Any, Union
from .numpy_pickle_utils import Unpickler

def hex_str(an_int): ...
def asbytes(s): ...

_MAX_LEN: int = ...
_CHUNK_SIZ: int = ...

def read_zfile(file_handle): ...
def write_zfile(file_handle, data, compress=...): ...

class NDArrayWrapper:
    def __init__(self, filename, subclass, allow_mmap=...) -> None: ...
    def read(self, unpickler): ...

class ZNDArrayWrapper(NDArrayWrapper):
    def __init__(self, filename, init_args, state) -> None: ...
    def read(self, unpickler): ...

class ZipNumpyUnpickler(Unpickler):
    dispatch = ...
    def __init__(self, filename, file_handle, mmap_mode=...) -> None: ...
    def load_build(self): ...

def load_compatibility(
    filename: Union[str, os.PathLike[str], Path, BytesIO, BufferedReader]
) -> Any: ...
