{{ metadata.header }}
{% set cached = ['arm32v5', 'arm32v6'] %}

FROM {{ metadata.base_image }} as base

{% if "amd64" in cuda %}
{% do cached.append("amd64") %}
FROM base as base-amd64
ENV NVARCH x86_64

    {% if "requires" in cuda.amd64 %}
ENV NVIDIA_REQUIRE_CUDA "{{ cuda.amd64.requires }}"
    {% endif %}
ENV NV_CUDA_CUDART_VERSION {{ cuda.amd64.components.cudart.version }}

{% endif %}

{% if "arm64v8" in cuda %}
{% do cached.append("arm64v8") %}
FROM base as base-arm64
ENV NVARCH sbsa

    {% if "requires" in cuda.arm64v8 %}
ENV NVIDIA_REQUIRE_CUDA "{{ cuda.arm64v8.requires }}"
    {% endif %}
ENV NV_CUDA_CUDART_VERSION {{ cuda.arm64v8.components.cudart.version }}

{% endif %}

{% if "ppc64le" in cuda %}
{% do cached.append("ppc64le") %}
FROM base as base-ppc64le
ENV NVARCH ppc64le

    {% if "requires" in cuda.ppc64le %}
ENV NVIDIA_REQUIRE_CUDA "{{ cuda.ppc64le.requires }}"
    {% endif %}
ENV NV_CUDA_CUDART_VERSION {{ cuda.ppc64le.components.cudart.version }}

{% endif %}

{% for key in metadata.arch_ctx if key not in cached %}
    {% if 'arm' in key %}

FROM base as base-arm
    {% elif 'i386' in key %}

FROM base as base-386
    {% else %}

FROM base as base-{{ key }}
    {% endif %}
{% endfor %}

FROM base-${TARGETARCH}

ARG TARGETARCH

LABEL maintainer "BentoML Team <contact@bentoml.ai>"

# setup ENV and ARG
{% for key, value in metadata.envars.items() if key not in ["BENTOML_VERSION","LC_ALL","LANG"] %}
{% if key in ["PYTHON_VERSION"] %}
ARG {{ key }}
{% else %}
ENV {{ key }}={{ value }}
{% endif %}
{% endfor %}

ENV PATH /opt/conda/bin:$PATH

# needed for string substitution
SHELL ["/bin/bash","-exo", "pipefail", "-c"]

RUN yum upgrade -y \
    && yum install -y wget git ca-certificates curl gcc gcc-c++ make \
    && yum clean all \
    && rm -rf /var/cache/yum

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-$(uname -s)-$(uname -m).sh -O ~/miniconda.sh && \
    chmod +x ~/miniconda.sh && \
    ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
    /opt/conda/bin/conda clean -afy && \
    yum clean all && \
    yum autoremove -y wget && \
    rm -rf /var/cache/yum

RUN /opt/conda/bin/conda install -y python=$PYTHON_VERSION pip && \
    /opt/conda/bin/conda clean -afy

COPY tools/bashrc /etc/bash.bashrc
RUN chmod a+r /etc/bash.bashrc
