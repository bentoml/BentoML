[metadata]
name = bentoml
version = attr: bentoml.__version__
description = bentoml: A framework for machine learning model serving
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/bentoml/BentoML
author = BentoML Team
author_email = contact@bentoml.ai
license = Apache-2.0
license_file = LICENSE
license_files = LICENSE
classifiers =
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Software Development :: Libraries
keywords = MLOps, AI, Bento
project_urls =
    Documentation = https://docs.bentoml.org/en/latest/
    Bug Reports = https://github.com/bentoml/BentoML/issues
    BentoML User Slack Group = https://bit.ly/2N5IpbB

[options]
packages = bentoml
install_requires =
    PyYAML
    aiofiles
    aiohttp
    attrs>=20.1.0
    cattrs
    chardet
    circus
    click>=7.0
    cloudpickle
    deepmerge
    fs
    numpy
    packaging
    packaging>=20.0
    pathspec
    pip-tools
    prometheus-client
    psutil
    python-dateutil
    python-json-logger
    python-multipart
    requests
    rich
    schema
    simple-di>=0.1.4
    starlette
    typing-extensions>=3.7.4
    uvicorn
    importlib-metadata;python_version<"3.8"
python_requires = >=3.7
include_package_data = True
setup_requires =
    setuptools>=59.0
    setuptools-scm>=6.2.3
    wheel
zip_safe = False

[options.entry_points]
console_scripts =
    bentoml = bentoml._internal.cli:cli

[options.extras_require]
tracing =
    jaeger-client
    opentracing
    py-zipkin

[options.package_data]
bentoml = py.typed

[global]
verbose = true

[bdist_wheel]
universal = False
keep_temp = true

[sdist]
formats = gztar

[flake8]
ignore = E203, E266, W503
extend-ignore = E501, W505
max-line-length = 88
exclude =
    bentoml/_version.py
    typings/
per-file-ignores =
    bentoml/__init__.py:E402

[coverage:run]
omit =
    bentoml/_internal/types.py
    bentoml/testing/*
    bentoml/__main__.py
    bentoml/build_utils.py
    bentoml/io.py

[coverage:report]
show_missing = true
precision = 2
omit =
    bentoml/_internal/types.py
    bentoml/testing/*
    bentoml/__main__.py
    bentoml/build_utils.py
    bentoml/io.py
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    raise MissingDependencyException
    except ImportError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
