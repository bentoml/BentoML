name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 0 * * 1/2"

env:
  BENTOML_DO_NOT_TRACK: True
  LINES: 120
  COLUMNS: 120

jobs:
  diff:
    runs-on: ubuntu-latest
    outputs:
      related: ${{ steps.filter.outputs.related }}
      bentoml: ${{ steps.filter.outputs.bentoml }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: "main"
          filters: |
            related: &related
              - .github/workflows/ci.yml
              - codecov.yml
              - setup.cfg
              - pyproject.toml
              - scripts/ci/config.yml
              - scripts/ci/run_tests.sh
              - requirements/tests-requirements.txt
            bentoml:
              - *related
              - "bentoml/**"
              - "tests/**"
              - "examples/**"
            docs:
              - *related
              - requirements/docs-requirements.txt
              - "docs/**"

  codestyle_check:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    needs:
      - diff

    if: ${{ (github.event_name == 'pull_request' && needs.diff.outputs.bentoml == 'true') || github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.6"
          architecture: x64

      - name: Get pip cache dir
        id: cache-dir
        run: |
          echo ::set-output name=dir::$(pip cache dir)

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "17"
      - name: install pyright
        run: |
          npm install -g npm@^7 pyright

      - name: Cache pip dependencies
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ${{ steps.cache-dir.outputs.dir }}
          key: codestyle-${{ hashFiles('requirements/dev-requirements.txt') }}

      - name: Install dependencies
        run: |
          pip install .
          pip install -r requirements/dev-requirements.txt

      - name: Format check
        run: make ci-format
      - name: Lint check
        run: make ci-lint
      - name: Type check
        run: make ci-pyright

  documentation_spelling_check:
    defaults:
      run:
        shell: bash

    runs-on: ubuntu-latest
    needs:
      - diff

    if: ${{ (github.event_name == 'pull_request' && needs.diff.outputs.docs == 'true') || github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all tags and branches

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Get pip cache dir
        id: cache-dir
        run: |
          echo ::set-output name=dir::$(pip cache dir)

      - name: Cache pip dependencies
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ${{ steps.cache-dir.outputs.dir }}
          key: ${{ runner.os }}-docs-${{ hashFiles('requirements/docs-requirements.txt') }}

      - name: Install dependencies
        run: |
          pip install .
          pip install -r requirements/docs-requirements.txt

      - name: Install libenchant
        run: |
          sudo apt-get update && sudo apt-get install -y libenchant-dev

      - name: Run spellcheck script
        run: make spellcheck-docs
        shell: bash

  unit_tests:
    needs:
      - diff

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    defaults:
      run:
        shell: bash

    if: ${{ (github.event_name == 'pull_request' && needs.diff.outputs.bentoml == 'true') || github.event_name == 'push' }}
    name: python${{ matrix.python-version }}_unit_tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all tags and branches

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Get pip cache dir
        id: cache-dir
        run: |
          echo ::set-output name=dir::$(pip cache dir)

      - name: Cache pip dependencies
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ${{ steps.cache-dir.outputs.dir }}
          key: ${{ runner.os }}-tests-${{ hashFiles('requirements/tests-requirements.txt') }}

      - name: Install dependencies
        run: |
          pip install .
          pip install -r requirements/tests-requirements.txt

      - name: Run unit tests
        if: ${{ matrix.os != 'windows-latest' }}
        run: make tests-unit

      - name: Run unit tests (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: make tests-unit
        shell: bash

      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          name: codecov-${{ matrix.os }}-python${{ matrix.python-version }}
          fail_ci_if_error: true
          flags: unit-tests
          directory: ./
          files: ./unit.xml
          verbose: true

  bento_server_e2e_tests:
    needs:
      - diff

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    defaults:
      run:
        shell: bash

    if: ${{ (github.event_name == 'pull_request' && needs.diff.outputs.bentoml == 'true') || github.event_name == 'push' }}
    name: python${{ matrix.python-version }}_e2e_tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    env:
      SETUPTOOLS_USE_DISTUTILS: stdlib
      BENTOML_BUNDLE_LOCAL_BUILD: True

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all tags and branches
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - name: Set up Docker Buildx
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Get pip cache dir
        id: cache-dir
        run: |
          echo ::set-output name=dir::$(pip cache dir)

      - name: Cache pip dependencies
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ${{ steps.cache-dir.outputs.dir }}
          key: ${{ runner.os }}-tests-${{ hashFiles('requirements/tests-requirements.txt') }}

      - name: Install dependencies
        run: |
          pip install -e .
          pip install -r requirements/tests-requirements.txt
          pip install -r tests/e2e/bento_server_general_features/requirements.txt

      - name: Export Action Envvar
        run: export GITHUB_ACTION=true

      - name: Run tests and generate coverage report
        run: ./scripts/ci/run_tests.sh general_features

      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: e2e-tests
          directory: ./
          files: ./tests/e2e/bento_server_general_features/general_features.xml
          verbose: true

concurrency:
  group: ci-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
