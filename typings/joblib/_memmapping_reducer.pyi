SYSTEM_SHARED_MEM_FS = ...
SYSTEM_SHARED_MEM_FS_MIN_SIZE = ...
FOLDER_PERMISSIONS = ...
FILE_PERMISSIONS = ...
JOBLIB_MMAPS = ...

def add_maybe_unlink_finalizer(memmap): ...
def unlink_file(filename): ...

class _WeakArrayKeyMap:
    def __init__(self) -> None: ...
    def get(self, obj): ...
    def set(self, obj, value): ...
    def __getstate__(self): ...

def has_shareable_memory(a): ...
def reduce_array_memmap_backward(a): ...

class ArrayMemmapForwardReducer:
    def __init__(
        self,
        max_nbytes,
        temp_folder_resolver,
        mmap_mode,
        unlink_on_gc_collect,
        verbose=...,
        prewarm=...,
    ) -> None: ...
    def __reduce__(self): ...
    def __call__(self, a): ...

def get_memmapping_reducers(
    forward_reducers=...,
    backward_reducers=...,
    temp_folder_resolver=...,
    max_nbytes=...,
    mmap_mode=...,
    verbose=...,
    prewarm=...,
    unlink_on_gc_collect=...,
    **kwargs
): ...

class TemporaryResourcesManager:
    def __init__(self, temp_folder_root=..., context_id=...) -> None: ...
    def set_current_context(self, context_id): ...
    def register_new_context(self, context_id): ...
