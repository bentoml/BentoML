"""
This type stub file was generated by pyright.
"""

import six

"""Base class for tests.

All Filesystems should be able to pass these.

"""
if six.PY2: ...
else: ...
UNICODE_TEXT = ...

class FSTestCases:
    """Basic FS tests."""

    data1 = ...
    data2 = ...
    data3 = ...
    data4 = ...
    def make_fs(self):
        """Return an FS instance."""
        ...
    def destroy_fs(self, fs):  # -> None:
        """Destroy a FS instance.

        Arguments:
            fs (FS): A filesystem instance previously opened
                by `~fs.test.FSTestCases.make_fs`.

        """
        ...
    def setUp(self): ...
    def tearDown(self): ...
    def assert_exists(self, path):  # -> None:
        """Assert a path exists.

        Arguments:
            path (str): A path on the filesystem.

        """
        ...
    def assert_not_exists(self, path):  # -> None:
        """Assert a path does not exist.

        Arguments:
            path (str): A path on the filesystem.

        """
        ...
    def assert_isempty(self, path):  # -> None:
        """Assert a path is an empty directory.

        Arguments:
            path (str): A path on the filesystem.

        """
        ...
    def assert_isfile(self, path):  # -> None:
        """Assert a path is a file.

        Arguments:
            path (str): A path on the filesystem.

        """
        ...
    def assert_isdir(self, path):  # -> None:
        """Assert a path is a directory.

        Arguments:
            path (str): A path on the filesystem.

        """
        ...
    def assert_bytes(self, path, contents):  # -> None:
        """Assert a file contains the given bytes.

        Arguments:
            path (str): A path on the filesystem.
            contents (bytes): Bytes to compare.

        """
        ...
    def assert_text(self, path, contents):  # -> None:
        """Assert a file contains the given text.

        Arguments:
            path (str): A path on the filesystem.
            contents (str): Text to compare.

        """
        ...
    def test_root_dir(self): ...
    def test_appendbytes(self): ...
    def test_appendtext(self): ...
    def test_basic(self): ...
    def test_getmeta(self): ...
    def test_isfile(self): ...
    def test_isdir(self): ...
    def test_islink(self): ...
    def test_getsize(self): ...
    def test_getsyspath(self): ...
    def test_geturl(self): ...
    def test_geturl_purpose(self):  # -> None:
        """Check an unknown purpose raises a NoURL error."""
        ...
    def test_validatepath(self):  # -> None:
        """Check validatepath returns an absolute path."""
        ...
    def test_invalid_chars(self): ...
    def test_getinfo(self): ...
    def test_exists(self): ...
    def test_listdir(self): ...
    def test_move(self): ...
    def test_makedir(self): ...
    def test_makedirs(self): ...
    def test_repeat_dir(self): ...
    def test_open(self): ...
    def test_openbin_rw(self): ...
    def test_open_files(self): ...
    def test_openbin(self): ...
    def test_open_exclusive(self): ...
    def test_openbin_exclusive(self): ...
    def test_opendir(self): ...
    def test_remove(self): ...
    def test_removedir(self): ...
    def test_removetree(self): ...
    def test_removetree_root(self): ...
    def test_setinfo(self): ...
    def test_settimes(self): ...
    def test_touch(self): ...
    def test_close(self): ...
    def test_copy(self): ...
    def test_upload_0(self): ...
    def test_upload_1(self): ...
    def test_upload_2(self): ...
    def test_upload_4(self): ...
    def test_download_0(self): ...
    def test_download_1(self): ...
    def test_download_2(self): ...
    def test_download_4(self): ...
    def test_create(self): ...
    def test_desc(self): ...
    def test_scandir(self): ...
    def test_filterdir(self): ...
    def test_readbytes(self): ...
    def test_download(self): ...
    def test_download_chunk_size(self): ...
    def test_isempty(self): ...
    def test_writebytes(self): ...
    def test_readtext(self): ...
    def test_writetext(self): ...
    def test_writefile(self): ...
    def test_upload(self): ...
    def test_upload_chunk_size(self): ...
    def test_bin_files(self): ...
    def test_files(self): ...
    def test_copy_file(self): ...
    def test_copy_structure(self): ...
    def test_copy_dir_mem(self): ...
    def test_copy_dir_temp(self): ...
    def test_move_dir_mem(self): ...
    def test_move_dir_temp(self): ...
    def test_move_same_fs(self): ...
    def test_move_file_same_fs(self): ...
    def test_move_file_mem(self): ...
    def test_move_file_temp(self): ...
    def test_copydir(self): ...
    def test_movedir(self): ...
    def test_match(self): ...
    def test_tree(self): ...
    def test_unicode_path(self): ...
    def test_case_sensitive(self): ...
    def test_glob(self): ...
    def test_hash(self): ...
